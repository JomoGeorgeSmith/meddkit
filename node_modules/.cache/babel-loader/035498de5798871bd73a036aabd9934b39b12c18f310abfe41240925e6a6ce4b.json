{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/PatientDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Card, Button, Container, Table, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PatientDetails({\n  client\n}) {\n  _s();\n  var _patient$name, _patient$name$, _patient$name$$given, _patient$name2, _patient$name2$;\n  const {\n    id\n  } = useParams();\n  const [patient, setPatient] = useState(null);\n  const [encounters, setEncounters] = useState([]);\n  const [notes, setNotes] = useState([]);\n  const [conditions, setConditions] = useState([]);\n  const [newRows, setNewRows] = useState([]); // Manage newly added rows\n\n  useEffect(() => {\n    client.request(`Patient/${id}`).then(data => setPatient(data));\n    client.request(`Encounter?patient=${id}`).then(data => {\n      var _data$entry;\n      setEncounters(((_data$entry = data.entry) === null || _data$entry === void 0 ? void 0 : _data$entry.map(entry => entry.resource)) || []);\n    });\n    client.request(`DocumentReference?patient=${id}`).then(data => {\n      var _data$entry2;\n      setNotes(((_data$entry2 = data.entry) === null || _data$entry2 === void 0 ? void 0 : _data$entry2.map(entry => entry.resource)) || []);\n    });\n    client.request(`Condition?patient=${id}`).then(data => {\n      var _data$entry3;\n      setConditions(((_data$entry3 = data.entry) === null || _data$entry3 === void 0 ? void 0 : _data$entry3.map(entry => entry.resource)) || []);\n    });\n  }, [client, id]);\n  const visitData = [...encounters.map(encounter => {\n    var _encounter$period, _visitNotes$, _visitNotes$$content, _visitNotes$$content$, _visitNotes$$content$2, _visitNotes$2, _visitNotes$2$content, _visitNotes$2$content2, _visitNotes$2$content3, _visitConditions$, _visitConditions$$cod, _visitConditions$$cod2, _visitConditions$$cod3, _visitConditions$2, _visitConditions$2$co, _visitConditions$2$co2, _visitConditions$2$co3;\n    const encounterId = encounter.id;\n    const visitNotes = notes.filter(note => {\n      var _note$context, _note$context$encount;\n      return ((_note$context = note.context) === null || _note$context === void 0 ? void 0 : (_note$context$encount = _note$context.encounter) === null || _note$context$encount === void 0 ? void 0 : _note$context$encount.reference) === `Encounter/${encounterId}`;\n    });\n    const visitConditions = conditions.filter(condition => {\n      var _condition$encounter;\n      return ((_condition$encounter = condition.encounter) === null || _condition$encounter === void 0 ? void 0 : _condition$encounter.reference) === `Encounter/${encounterId}`;\n    });\n    return {\n      id: encounterId,\n      date: ((_encounter$period = encounter.period) === null || _encounter$period === void 0 ? void 0 : _encounter$period.start) || \"\",\n      note: (_visitNotes$ = visitNotes[0]) !== null && _visitNotes$ !== void 0 && (_visitNotes$$content = _visitNotes$.content) !== null && _visitNotes$$content !== void 0 && (_visitNotes$$content$ = _visitNotes$$content[0]) !== null && _visitNotes$$content$ !== void 0 && (_visitNotes$$content$2 = _visitNotes$$content$.attachment) !== null && _visitNotes$$content$2 !== void 0 && _visitNotes$$content$2.data ? atob((_visitNotes$2 = visitNotes[0]) === null || _visitNotes$2 === void 0 ? void 0 : (_visitNotes$2$content = _visitNotes$2.content) === null || _visitNotes$2$content === void 0 ? void 0 : (_visitNotes$2$content2 = _visitNotes$2$content[0]) === null || _visitNotes$2$content2 === void 0 ? void 0 : (_visitNotes$2$content3 = _visitNotes$2$content2.attachment) === null || _visitNotes$2$content3 === void 0 ? void 0 : _visitNotes$2$content3.data) : \"\",\n      icdCode: ((_visitConditions$ = visitConditions[0]) === null || _visitConditions$ === void 0 ? void 0 : (_visitConditions$$cod = _visitConditions$.code) === null || _visitConditions$$cod === void 0 ? void 0 : (_visitConditions$$cod2 = _visitConditions$$cod.coding) === null || _visitConditions$$cod2 === void 0 ? void 0 : (_visitConditions$$cod3 = _visitConditions$$cod2[0]) === null || _visitConditions$$cod3 === void 0 ? void 0 : _visitConditions$$cod3.code) || \"\",\n      condition: ((_visitConditions$2 = visitConditions[0]) === null || _visitConditions$2 === void 0 ? void 0 : (_visitConditions$2$co = _visitConditions$2.code) === null || _visitConditions$2$co === void 0 ? void 0 : (_visitConditions$2$co2 = _visitConditions$2$co.coding) === null || _visitConditions$2$co2 === void 0 ? void 0 : (_visitConditions$2$co3 = _visitConditions$2$co2[0]) === null || _visitConditions$2$co3 === void 0 ? void 0 : _visitConditions$2$co3.display) || \"\"\n    };\n  }), ...newRows];\n  const handleEdit = (rowId, field, value) => {\n    setNewRows(prev => prev.map(row => row.id === rowId ? {\n      ...row,\n      [field]: value\n    } : row));\n  };\n  const addRow = () => {\n    const newRow = {\n      id: `new-${Date.now()}`,\n      date: new Date().toISOString(),\n      note: \"\",\n      condition: \"\",\n      icdCode: \"\"\n    };\n    setNewRows(prev => [...prev, newRow]);\n  };\n  const saveChanges = async () => {\n    try {\n      var _updatedEncounters$en, _updatedNotes$entry, _updatedConditions$en;\n      console.log(\"Starting save process...\");\n\n      // Save existing conditions and notes\n      const conditionPromises = conditions.map(condition => client.update(condition).catch(error => {\n        console.error(\"Error updating condition:\", condition, error);\n        throw error;\n      }));\n      const notePromises = notes.map(note => client.update(note).catch(error => {\n        console.error(\"Error updating note:\", note, error);\n        throw error;\n      }));\n\n      // Save new rows as FHIR resources\n      for (const row of newRows) {\n        console.log(\"Saving new row:\", row);\n        if (!row.date || !row.note || !row.condition || !row.icdCode) {\n          console.warn(\"Skipping incomplete row:\", row);\n          continue;\n        }\n        const encounter = {\n          resourceType: \"Encounter\",\n          subject: {\n            reference: `Patient/${id}`\n          },\n          period: {\n            start: row.date\n          }\n        };\n        const newEncounter = await client.create(encounter);\n        console.log(\"New Encounter created:\", newEncounter);\n        const condition = {\n          resourceType: \"Condition\",\n          subject: {\n            reference: `Patient/${id}`\n          },\n          encounter: {\n            reference: `Encounter/${newEncounter.id}`\n          },\n          code: {\n            coding: [{\n              code: row.icdCode,\n              display: row.condition\n            }]\n          }\n        };\n        await client.create(condition);\n        console.log(\"New Condition created for Encounter:\", newEncounter.id);\n        const note = {\n          resourceType: \"DocumentReference\",\n          subject: {\n            reference: `Patient/${id}`\n          },\n          context: {\n            encounter: {\n              reference: `Encounter/${newEncounter.id}`\n            }\n          },\n          content: [{\n            attachment: {\n              contentType: \"text/plain\",\n              data: btoa(row.note) // Encode note in Base64\n            }\n          }]\n        };\n        await client.create(note);\n        console.log(\"New Note created for Encounter:\", newEncounter.id);\n      }\n\n      // Wait for all saves to complete\n      await Promise.all([...conditionPromises, ...notePromises]);\n      console.log(\"All changes saved successfully!\");\n      alert(\"Changes saved successfully!\");\n      setNewRows([]); // Clear new rows after saving\n\n      // Refresh data\n      const updatedEncounters = await client.request(`Encounter?patient=${id}`);\n      setEncounters(((_updatedEncounters$en = updatedEncounters.entry) === null || _updatedEncounters$en === void 0 ? void 0 : _updatedEncounters$en.map(entry => entry.resource)) || []);\n      const updatedNotes = await client.request(`DocumentReference?patient=${id}`);\n      setNotes(((_updatedNotes$entry = updatedNotes.entry) === null || _updatedNotes$entry === void 0 ? void 0 : _updatedNotes$entry.map(entry => entry.resource)) || []);\n      const updatedConditions = await client.request(`Condition?patient=${id}`);\n      setConditions(((_updatedConditions$en = updatedConditions.entry) === null || _updatedConditions$en === void 0 ? void 0 : _updatedConditions$en.map(entry => entry.resource)) || []);\n    } catch (error) {\n      console.error(\"Error saving changes:\", error);\n      alert(\"Error saving changes.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: patient ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mt-4\",\n        children: \"Patient Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          as: \"h5\",\n          children: \"Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Full Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), \" \", `${(_patient$name = patient.name) === null || _patient$name === void 0 ? void 0 : (_patient$name$ = _patient$name[0]) === null || _patient$name$ === void 0 ? void 0 : (_patient$name$$given = _patient$name$.given) === null || _patient$name$$given === void 0 ? void 0 : _patient$name$$given.join(\" \")} ${(_patient$name2 = patient.name) === null || _patient$name2 === void 0 ? void 0 : (_patient$name2$ = _patient$name2[0]) === null || _patient$name2$ === void 0 ? void 0 : _patient$name2$.family}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Gender:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), \" \", patient.gender || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Birthdate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), \" \", patient.birthDate || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          as: \"h5\",\n          children: \"Visit Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date of Visit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Note\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Condition\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"ICD Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: visitData.map(visit => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    value: visit.date || \"\",\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 2,\n                    value: visit.note || \"\",\n                    onChange: e => handleEdit(visit.id, \"note\", e.target.value || \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    value: visit.condition || \"\",\n                    onChange: e => handleEdit(visit.id, \"condition\", e.target.value || \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    value: visit.icdCode || \"\",\n                    onChange: e => handleEdit(visit.id, \"icdCode\", e.target.value || \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this)]\n              }, visit.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: addRow,\n            className: \"mt-3\",\n            children: \"Add Row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: saveChanges,\n          children: \"Save All Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading patient data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientDetails, \"P2MZJ5DUOsbHpSGny0203SbQuO0=\", false, function () {\n  return [useParams];\n});\n_c = PatientDetails;\nvar _c;\n$RefreshReg$(_c, \"PatientDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Card","Button","Container","Table","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","PatientDetails","client","_s","_patient$name","_patient$name$","_patient$name$$given","_patient$name2","_patient$name2$","id","patient","setPatient","encounters","setEncounters","notes","setNotes","conditions","setConditions","newRows","setNewRows","request","then","data","_data$entry","entry","map","resource","_data$entry2","_data$entry3","visitData","encounter","_encounter$period","_visitNotes$","_visitNotes$$content","_visitNotes$$content$","_visitNotes$$content$2","_visitNotes$2","_visitNotes$2$content","_visitNotes$2$content2","_visitNotes$2$content3","_visitConditions$","_visitConditions$$cod","_visitConditions$$cod2","_visitConditions$$cod3","_visitConditions$2","_visitConditions$2$co","_visitConditions$2$co2","_visitConditions$2$co3","encounterId","visitNotes","filter","note","_note$context","_note$context$encount","context","reference","visitConditions","condition","_condition$encounter","date","period","start","content","attachment","atob","icdCode","code","coding","display","handleEdit","rowId","field","value","prev","row","addRow","newRow","Date","now","toISOString","saveChanges","_updatedEncounters$en","_updatedNotes$entry","_updatedConditions$en","console","log","conditionPromises","update","catch","error","notePromises","warn","resourceType","subject","newEncounter","create","contentType","btoa","Promise","all","alert","updatedEncounters","updatedNotes","updatedConditions","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Header","as","Body","name","given","join","family","gender","birthDate","striped","bordered","hover","visit","Control","type","readOnly","rows","onChange","e","target","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/PatientDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Card, Button, Container, Table, Form } from \"react-bootstrap\";\n\nexport default function PatientDetails({ client }) {\n  const { id } = useParams();\n  const [patient, setPatient] = useState(null);\n  const [encounters, setEncounters] = useState([]);\n  const [notes, setNotes] = useState([]);\n  const [conditions, setConditions] = useState([]);\n  const [newRows, setNewRows] = useState([]); // Manage newly added rows\n\n  useEffect(() => {\n    client.request(`Patient/${id}`).then((data) => setPatient(data));\n    client.request(`Encounter?patient=${id}`).then((data) => {\n      setEncounters(data.entry?.map((entry) => entry.resource) || []);\n    });\n    client.request(`DocumentReference?patient=${id}`).then((data) => {\n      setNotes(data.entry?.map((entry) => entry.resource) || []);\n    });\n    client.request(`Condition?patient=${id}`).then((data) => {\n      setConditions(data.entry?.map((entry) => entry.resource) || []);\n    });\n  }, [client, id]);\n\n  const visitData = [\n    ...encounters.map((encounter) => {\n      const encounterId = encounter.id;\n      const visitNotes = notes.filter(\n        (note) => note.context?.encounter?.reference === `Encounter/${encounterId}`\n      );\n      const visitConditions = conditions.filter(\n        (condition) => condition.encounter?.reference === `Encounter/${encounterId}`\n      );\n      return {\n        id: encounterId,\n        date: encounter.period?.start || \"\",\n        note: visitNotes[0]?.content?.[0]?.attachment?.data\n          ? atob(visitNotes[0]?.content?.[0]?.attachment?.data)\n          : \"\",\n        icdCode: visitConditions[0]?.code?.coding?.[0]?.code || \"\",\n        condition: visitConditions[0]?.code?.coding?.[0]?.display || \"\",\n      };\n    }),\n    ...newRows,\n  ];\n\n  const handleEdit = (rowId, field, value) => {\n    setNewRows((prev) =>\n      prev.map((row) =>\n        row.id === rowId\n          ? {\n              ...row,\n              [field]: value,\n            }\n          : row\n      )\n    );\n  };\n\n  const addRow = () => {\n    const newRow = {\n      id: `new-${Date.now()}`,\n      date: new Date().toISOString(),\n      note: \"\",\n      condition: \"\",\n      icdCode: \"\",\n    };\n    setNewRows((prev) => [...prev, newRow]);\n  };\n\n  const saveChanges = async () => {\n    try {\n      console.log(\"Starting save process...\");\n\n      // Save existing conditions and notes\n      const conditionPromises = conditions.map((condition) =>\n        client.update(condition).catch((error) => {\n          console.error(\"Error updating condition:\", condition, error);\n          throw error;\n        })\n      );\n\n      const notePromises = notes.map((note) =>\n        client.update(note).catch((error) => {\n          console.error(\"Error updating note:\", note, error);\n          throw error;\n        })\n      );\n\n      // Save new rows as FHIR resources\n      for (const row of newRows) {\n        console.log(\"Saving new row:\", row);\n\n        if (!row.date || !row.note || !row.condition || !row.icdCode) {\n          console.warn(\"Skipping incomplete row:\", row);\n          continue;\n        }\n\n        const encounter = {\n          resourceType: \"Encounter\",\n          subject: { reference: `Patient/${id}` },\n          period: { start: row.date },\n        };\n        const newEncounter = await client.create(encounter);\n\n        console.log(\"New Encounter created:\", newEncounter);\n\n        const condition = {\n          resourceType: \"Condition\",\n          subject: { reference: `Patient/${id}` },\n          encounter: { reference: `Encounter/${newEncounter.id}` },\n          code: {\n            coding: [\n              {\n                code: row.icdCode,\n                display: row.condition,\n              },\n            ],\n          },\n        };\n        await client.create(condition);\n\n        console.log(\"New Condition created for Encounter:\", newEncounter.id);\n\n        const note = {\n          resourceType: \"DocumentReference\",\n          subject: { reference: `Patient/${id}` },\n          context: { encounter: { reference: `Encounter/${newEncounter.id}` } },\n          content: [\n            {\n              attachment: {\n                contentType: \"text/plain\",\n                data: btoa(row.note), // Encode note in Base64\n              },\n            },\n          ],\n        };\n        await client.create(note);\n\n        console.log(\"New Note created for Encounter:\", newEncounter.id);\n      }\n\n      // Wait for all saves to complete\n      await Promise.all([...conditionPromises, ...notePromises]);\n\n      console.log(\"All changes saved successfully!\");\n      alert(\"Changes saved successfully!\");\n\n      setNewRows([]); // Clear new rows after saving\n\n      // Refresh data\n      const updatedEncounters = await client.request(`Encounter?patient=${id}`);\n      setEncounters(updatedEncounters.entry?.map((entry) => entry.resource) || []);\n\n      const updatedNotes = await client.request(`DocumentReference?patient=${id}`);\n      setNotes(updatedNotes.entry?.map((entry) => entry.resource) || []);\n\n      const updatedConditions = await client.request(`Condition?patient=${id}`);\n      setConditions(updatedConditions.entry?.map((entry) => entry.resource) || []);\n    } catch (error) {\n      console.error(\"Error saving changes:\", error);\n      alert(\"Error saving changes.\");\n    }\n  };\n\n  return (\n    <Container>\n      {patient ? (\n        <>\n          <h1 className=\"text-center mt-4\">Patient Details</h1>\n\n          {/* Patient Basic Details */}\n          <Card className=\"mb-4\">\n            <Card.Header as=\"h5\">Basic Information</Card.Header>\n            <Card.Body>\n              <p>\n                <strong>Full Name:</strong>{\" \"}\n                {`${patient.name?.[0]?.given?.join(\" \")} ${patient.name?.[0]?.family}`}\n              </p>\n              <p>\n                <strong>Gender:</strong> {patient.gender || \"N/A\"}\n              </p>\n              <p>\n                <strong>Birthdate:</strong> {patient.birthDate || \"N/A\"}\n              </p>\n            </Card.Body>\n          </Card>\n\n          {/* Visit Details */}\n          <Card className=\"mb-4\">\n            <Card.Header as=\"h5\">Visit Details</Card.Header>\n            <Card.Body>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Date of Visit</th>\n                    <th>Note</th>\n                    <th>Condition</th>\n                    <th>ICD Code</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {visitData.map((visit) => (\n                    <tr key={visit.id}>\n                      <td>\n                        <Form.Control\n                          type=\"text\"\n                          value={visit.date || \"\"}\n                          readOnly\n                        />\n                      </td>\n                      <td>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows={2}\n                          value={visit.note || \"\"}\n                          onChange={(e) =>\n                            handleEdit(visit.id, \"note\", e.target.value || \"\")\n                          }\n                        />\n                      </td>\n                      <td>\n                        <Form.Control\n                          type=\"text\"\n                          value={visit.condition || \"\"}\n                          onChange={(e) =>\n                            handleEdit(visit.id, \"condition\", e.target.value || \"\")\n                          }\n                        />\n                      </td>\n                      <td>\n                        <Form.Control\n                          type=\"text\"\n                          value={visit.icdCode || \"\"}\n                          onChange={(e) =>\n                            handleEdit(visit.id, \"icdCode\", e.target.value || \"\")\n                          }\n                        />\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n              <Button variant=\"success\" onClick={addRow} className=\"mt-3\">\n                Add Row\n              </Button>\n            </Card.Body>\n          </Card>\n\n          <div className=\"text-center\">\n            <Button variant=\"primary\" onClick={saveChanges}>\n              Save All Changes\n            </Button>\n          </div>\n        </>\n      ) : (\n        <p>Loading patient data...</p>\n      )}\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}