{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/PatientDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, Container, Table, Form } from \"react-bootstrap\";\nimport \"./PatientDetails.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PatientDetails({\n  client\n}) {\n  _s();\n  var _patient$name, _patient$name$, _patient$name$$given, _patient$name2, _patient$name2$;\n  const {\n    id\n  } = useParams();\n  const [patient, setPatient] = useState(null);\n  const [rows, setRows] = useState([]); // Unified state for all rows (new and existing)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      var _encounters$entry, _notes$entry, _conditions$entry;\n      const patientData = await client.request(`Patient/${id}`);\n      setPatient(patientData);\n      const encounters = await client.request(`Encounter?patient=${id}`);\n      const encounterResources = ((_encounters$entry = encounters.entry) === null || _encounters$entry === void 0 ? void 0 : _encounters$entry.map(entry => entry.resource)) || [];\n      const notes = await client.request(`DocumentReference?patient=${id}`);\n      const noteResources = ((_notes$entry = notes.entry) === null || _notes$entry === void 0 ? void 0 : _notes$entry.map(entry => entry.resource)) || [];\n      const conditions = await client.request(`Condition?patient=${id}`);\n      const conditionResources = ((_conditions$entry = conditions.entry) === null || _conditions$entry === void 0 ? void 0 : _conditions$entry.map(entry => entry.resource)) || [];\n      const mergedRows = encounterResources.map(encounter => {\n        var _encounter$period, _encounterNotes$, _encounterNotes$$cont, _encounterNotes$$cont2, _encounterNotes$$cont3, _encounterNotes$2, _encounterNotes$2$con, _encounterNotes$2$con2, _encounterNotes$2$con3, _encounterConditions$, _encounterConditions$2, _encounterConditions$3, _encounterConditions$4, _encounterConditions$5, _encounterConditions$6, _encounterConditions$7, _encounterConditions$8;\n        const encounterId = encounter.id;\n        const encounterNotes = noteResources.filter(note => {\n          var _note$context, _note$context$encount;\n          return ((_note$context = note.context) === null || _note$context === void 0 ? void 0 : (_note$context$encount = _note$context.encounter) === null || _note$context$encount === void 0 ? void 0 : _note$context$encount.reference) === `Encounter/${encounterId}`;\n        });\n        const encounterConditions = conditionResources.filter(condition => {\n          var _condition$encounter;\n          return ((_condition$encounter = condition.encounter) === null || _condition$encounter === void 0 ? void 0 : _condition$encounter.reference) === `Encounter/${encounterId}`;\n        });\n        return {\n          id: encounterId,\n          date: ((_encounter$period = encounter.period) === null || _encounter$period === void 0 ? void 0 : _encounter$period.start) || new Date().toISOString(),\n          note: (_encounterNotes$ = encounterNotes[0]) !== null && _encounterNotes$ !== void 0 && (_encounterNotes$$cont = _encounterNotes$.content) !== null && _encounterNotes$$cont !== void 0 && (_encounterNotes$$cont2 = _encounterNotes$$cont[0]) !== null && _encounterNotes$$cont2 !== void 0 && (_encounterNotes$$cont3 = _encounterNotes$$cont2.attachment) !== null && _encounterNotes$$cont3 !== void 0 && _encounterNotes$$cont3.data ? atob((_encounterNotes$2 = encounterNotes[0]) === null || _encounterNotes$2 === void 0 ? void 0 : (_encounterNotes$2$con = _encounterNotes$2.content) === null || _encounterNotes$2$con === void 0 ? void 0 : (_encounterNotes$2$con2 = _encounterNotes$2$con[0]) === null || _encounterNotes$2$con2 === void 0 ? void 0 : (_encounterNotes$2$con3 = _encounterNotes$2$con2.attachment) === null || _encounterNotes$2$con3 === void 0 ? void 0 : _encounterNotes$2$con3.data) : \"\",\n          icdCode: ((_encounterConditions$ = encounterConditions[0]) === null || _encounterConditions$ === void 0 ? void 0 : (_encounterConditions$2 = _encounterConditions$.code) === null || _encounterConditions$2 === void 0 ? void 0 : (_encounterConditions$3 = _encounterConditions$2.coding) === null || _encounterConditions$3 === void 0 ? void 0 : (_encounterConditions$4 = _encounterConditions$3[0]) === null || _encounterConditions$4 === void 0 ? void 0 : _encounterConditions$4.code) || \"\",\n          condition: ((_encounterConditions$5 = encounterConditions[0]) === null || _encounterConditions$5 === void 0 ? void 0 : (_encounterConditions$6 = _encounterConditions$5.code) === null || _encounterConditions$6 === void 0 ? void 0 : (_encounterConditions$7 = _encounterConditions$6.coding) === null || _encounterConditions$7 === void 0 ? void 0 : (_encounterConditions$8 = _encounterConditions$7[0]) === null || _encounterConditions$8 === void 0 ? void 0 : _encounterConditions$8.display) || \"\",\n          isNew: false\n        };\n      });\n      setRows(mergedRows);\n    };\n    fetchData();\n  }, [client, id]);\n  const handleEdit = (rowId, field, value) => {\n    setRows(prev => prev.map(row => row.id === rowId ? {\n      ...row,\n      [field]: value\n    } : row));\n  };\n  const addRow = () => {\n    const newRow = {\n      id: `new-${Date.now()}`,\n      date: new Date().toISOString(),\n      note: \"\",\n      condition: \"\",\n      icdCode: \"\",\n      isNew: true\n    };\n    setRows(prev => [...prev, newRow]);\n  };\n  const saveChanges = async () => {\n    try {\n      console.log(\"Saving changes...\");\n      const savePromises = rows.map(async row => {\n        if (row.isNew) {\n          // Save new rows\n          const encounter = {\n            resourceType: \"Encounter\",\n            subject: {\n              reference: `Patient/${id}`\n            },\n            period: {\n              start: row.date\n            }\n          };\n          const newEncounter = await client.create(encounter);\n          const condition = {\n            resourceType: \"Condition\",\n            subject: {\n              reference: `Patient/${id}`\n            },\n            encounter: {\n              reference: `Encounter/${newEncounter.id}`\n            },\n            code: {\n              coding: [{\n                code: row.icdCode,\n                display: row.condition\n              }]\n            }\n          };\n          await client.create(condition);\n          const note = {\n            resourceType: \"DocumentReference\",\n            subject: {\n              reference: `Patient/${id}`\n            },\n            context: {\n              encounter: {\n                reference: `Encounter/${newEncounter.id}`\n              }\n            },\n            content: [{\n              attachment: {\n                contentType: \"text/plain\",\n                data: btoa(row.note)\n              }\n            }]\n          };\n          await client.create(note);\n        } else {\n          // Update existing rows\n          const condition = {\n            resourceType: \"Condition\",\n            id: row.id,\n            subject: {\n              reference: `Patient/${id}`\n            },\n            code: {\n              coding: [{\n                code: row.icdCode,\n                display: row.condition\n              }]\n            }\n          };\n          await client.update(condition);\n          const note = {\n            resourceType: \"DocumentReference\",\n            id: row.id,\n            subject: {\n              reference: `Patient/${id}`\n            },\n            content: [{\n              attachment: {\n                contentType: \"text/plain\",\n                data: btoa(row.note)\n              }\n            }]\n          };\n          await client.update(note);\n        }\n      });\n      await Promise.all(savePromises);\n      alert(\"Changes saved successfully!\");\n    } catch (error) {\n      console.error(\"Error saving changes:\", error);\n      alert(\"Error saving changes.\");\n    }\n  };\n  const formatDate = date => {\n    if (!date) return \"N/A\";\n    return new Intl.DateTimeFormat(\"en-US\", {\n      dateStyle: \"long\"\n    }).format(new Date(date));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"patient-details-container\",\n    children: patient ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"modern-title\",\n        children: \"Patient Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-card mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-card-header\",\n          children: \"Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Full Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), \" \", `${(_patient$name = patient.name) === null || _patient$name === void 0 ? void 0 : (_patient$name$ = _patient$name[0]) === null || _patient$name$ === void 0 ? void 0 : (_patient$name$$given = _patient$name$.given) === null || _patient$name$$given === void 0 ? void 0 : _patient$name$$given.join(\" \")} ${(_patient$name2 = patient.name) === null || _patient$name2 === void 0 ? void 0 : (_patient$name2$ = _patient$name2[0]) === null || _patient$name2$ === void 0 ? void 0 : _patient$name2$.family}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Gender:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), \" \", patient.gender || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Birthdate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), \" \", formatDate(patient.birthDate)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-card mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-card-header\",\n          children: \"Visit Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            className: \"modern-table\",\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date of Visit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Note\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Condition\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"ICD Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatDate(row.date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 2,\n                    className: \"modern-input\",\n                    value: row.note || \"\",\n                    onChange: e => handleEdit(row.id, \"note\", e.target.value || \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    className: \"modern-input\",\n                    value: row.condition || \"\",\n                    onChange: e => handleEdit(row.id, \"condition\", e.target.value || \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    className: \"modern-input\",\n                    value: row.icdCode || \"\",\n                    onChange: e => handleEdit(row.id, \"icdCode\", e.target.value || \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this)]\n              }, row.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            className: \"modern-button mt-3\",\n            onClick: addRow,\n            children: \"Add Row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"modern-button\",\n          onClick: saveChanges,\n          children: \"Save All Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading patient data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientDetails, \"vPg/7Ky+HX64edngcDqwhNLD8DU=\", false, function () {\n  return [useParams];\n});\n_c = PatientDetails;\nvar _c;\n$RefreshReg$(_c, \"PatientDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Button","Container","Table","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","PatientDetails","client","_s","_patient$name","_patient$name$","_patient$name$$given","_patient$name2","_patient$name2$","id","patient","setPatient","rows","setRows","fetchData","_encounters$entry","_notes$entry","_conditions$entry","patientData","request","encounters","encounterResources","entry","map","resource","notes","noteResources","conditions","conditionResources","mergedRows","encounter","_encounter$period","_encounterNotes$","_encounterNotes$$cont","_encounterNotes$$cont2","_encounterNotes$$cont3","_encounterNotes$2","_encounterNotes$2$con","_encounterNotes$2$con2","_encounterNotes$2$con3","_encounterConditions$","_encounterConditions$2","_encounterConditions$3","_encounterConditions$4","_encounterConditions$5","_encounterConditions$6","_encounterConditions$7","_encounterConditions$8","encounterId","encounterNotes","filter","note","_note$context","_note$context$encount","context","reference","encounterConditions","condition","_condition$encounter","date","period","start","Date","toISOString","content","attachment","data","atob","icdCode","code","coding","display","isNew","handleEdit","rowId","field","value","prev","row","addRow","newRow","now","saveChanges","console","log","savePromises","resourceType","subject","newEncounter","create","contentType","btoa","update","Promise","all","alert","error","formatDate","Intl","DateTimeFormat","dateStyle","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","given","join","family","gender","birthDate","responsive","Control","as","onChange","e","target","type","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/PatientDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, Container, Table, Form } from \"react-bootstrap\";\nimport \"./PatientDetails.css\";\n\nexport default function PatientDetails({ client }) {\n  const { id } = useParams();\n  const [patient, setPatient] = useState(null);\n  const [rows, setRows] = useState([]); // Unified state for all rows (new and existing)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const patientData = await client.request(`Patient/${id}`);\n      setPatient(patientData);\n\n      const encounters = await client.request(`Encounter?patient=${id}`);\n      const encounterResources = encounters.entry?.map((entry) => entry.resource) || [];\n\n      const notes = await client.request(`DocumentReference?patient=${id}`);\n      const noteResources = notes.entry?.map((entry) => entry.resource) || [];\n\n      const conditions = await client.request(`Condition?patient=${id}`);\n      const conditionResources =\n        conditions.entry?.map((entry) => entry.resource) || [];\n\n      const mergedRows = encounterResources.map((encounter) => {\n        const encounterId = encounter.id;\n        const encounterNotes = noteResources.filter(\n          (note) => note.context?.encounter?.reference === `Encounter/${encounterId}`\n        );\n        const encounterConditions = conditionResources.filter(\n          (condition) => condition.encounter?.reference === `Encounter/${encounterId}`\n        );\n        return {\n          id: encounterId,\n          date: encounter.period?.start || new Date().toISOString(),\n          note: encounterNotes[0]?.content?.[0]?.attachment?.data\n            ? atob(encounterNotes[0]?.content?.[0]?.attachment?.data)\n            : \"\",\n          icdCode: encounterConditions[0]?.code?.coding?.[0]?.code || \"\",\n          condition: encounterConditions[0]?.code?.coding?.[0]?.display || \"\",\n          isNew: false,\n        };\n      });\n\n      setRows(mergedRows);\n    };\n\n    fetchData();\n  }, [client, id]);\n\n  const handleEdit = (rowId, field, value) => {\n    setRows((prev) =>\n      prev.map((row) =>\n        row.id === rowId\n          ? {\n              ...row,\n              [field]: value,\n            }\n          : row\n      )\n    );\n  };\n\n  const addRow = () => {\n    const newRow = {\n      id: `new-${Date.now()}`,\n      date: new Date().toISOString(),\n      note: \"\",\n      condition: \"\",\n      icdCode: \"\",\n      isNew: true,\n    };\n    setRows((prev) => [...prev, newRow]);\n  };\n\n  const saveChanges = async () => {\n    try {\n      console.log(\"Saving changes...\");\n\n      const savePromises = rows.map(async (row) => {\n        if (row.isNew) {\n          // Save new rows\n          const encounter = {\n            resourceType: \"Encounter\",\n            subject: { reference: `Patient/${id}` },\n            period: { start: row.date },\n          };\n          const newEncounter = await client.create(encounter);\n\n          const condition = {\n            resourceType: \"Condition\",\n            subject: { reference: `Patient/${id}` },\n            encounter: { reference: `Encounter/${newEncounter.id}` },\n            code: {\n              coding: [\n                {\n                  code: row.icdCode,\n                  display: row.condition,\n                },\n              ],\n            },\n          };\n          await client.create(condition);\n\n          const note = {\n            resourceType: \"DocumentReference\",\n            subject: { reference: `Patient/${id}` },\n            context: { encounter: { reference: `Encounter/${newEncounter.id}` } },\n            content: [\n              {\n                attachment: {\n                  contentType: \"text/plain\",\n                  data: btoa(row.note),\n                },\n              },\n            ],\n          };\n          await client.create(note);\n        } else {\n          // Update existing rows\n          const condition = {\n            resourceType: \"Condition\",\n            id: row.id,\n            subject: { reference: `Patient/${id}` },\n            code: {\n              coding: [\n                {\n                  code: row.icdCode,\n                  display: row.condition,\n                },\n              ],\n            },\n          };\n          await client.update(condition);\n\n          const note = {\n            resourceType: \"DocumentReference\",\n            id: row.id,\n            subject: { reference: `Patient/${id}` },\n            content: [\n              {\n                attachment: {\n                  contentType: \"text/plain\",\n                  data: btoa(row.note),\n                },\n              },\n            ],\n          };\n          await client.update(note);\n        }\n      });\n\n      await Promise.all(savePromises);\n\n      alert(\"Changes saved successfully!\");\n    } catch (error) {\n      console.error(\"Error saving changes:\", error);\n      alert(\"Error saving changes.\");\n    }\n  };\n\n  const formatDate = (date) => {\n    if (!date) return \"N/A\";\n    return new Intl.DateTimeFormat(\"en-US\", { dateStyle: \"long\" }).format(\n      new Date(date)\n    );\n  };\n\n  return (\n    <Container className=\"patient-details-container\">\n      {patient ? (\n        <>\n          <h1 className=\"modern-title\">Patient Details</h1>\n\n          {/* Patient Basic Information */}\n          <div className=\"custom-card mb-4\">\n            <div className=\"custom-card-header\">Basic Information</div>\n            <div className=\"custom-card-body\">\n              <p>\n                <strong>Full Name:</strong>{\" \"}\n                {`${patient.name?.[0]?.given?.join(\" \")} ${patient.name?.[0]?.family}`}\n              </p>\n              <p>\n                <strong>Gender:</strong> {patient.gender || \"N/A\"}\n              </p>\n              <p>\n                <strong>Birthdate:</strong> {formatDate(patient.birthDate)}\n              </p>\n            </div>\n          </div>\n\n          {/* Visit Details */}\n          <div className=\"custom-card mb-4\">\n            <div className=\"custom-card-header\">Visit Details</div>\n            <div className=\"custom-card-body\">\n              <Table className=\"modern-table\" responsive>\n                <thead>\n                  <tr>\n                    <th>Date of Visit</th>\n                    <th>Note</th>\n                    <th>Condition</th>\n                    <th>ICD Code</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {rows.map((row) => (\n                    <tr key={row.id}>\n                      <td>{formatDate(row.date)}</td>\n                      <td>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows={2}\n                          className=\"modern-input\"\n                          value={row.note || \"\"}\n                          onChange={(e) =>\n                            handleEdit(row.id, \"note\", e.target.value || \"\")\n                          }\n                        />\n                      </td>\n                      <td>\n                        <Form.Control\n                          type=\"text\"\n                          className=\"modern-input\"\n                          value={row.condition || \"\"}\n                          onChange={(e) =>\n                            handleEdit(row.id, \"condition\", e.target.value || \"\")\n                          }\n                        />\n                      </td>\n                      <td>\n                        <Form.Control\n                          type=\"text\"\n                          className=\"modern-input\"\n                          value={row.icdCode || \"\"}\n                          onChange={(e) =>\n                            handleEdit(row.id, \"icdCode\", e.target.value || \"\")\n                          }\n                        />\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n              <Button variant=\"success\" className=\"modern-button mt-3\" onClick={addRow}>\n                Add Row\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"text-center\">\n            <Button variant=\"primary\" className=\"modern-button\" onClick={saveChanges}>\n              Save All Changes\n            </Button>\n          </div>\n        </>\n      ) : (\n        <p>Loading patient data...</p>\n      )}\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}