{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/index.js\";\n//index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport FHIR from 'fhirclient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootElement = document.getElementById('root');\nconst smartLaunch = () => {\n  // Fallback FHIR server URL for local testing\n  const fallbackIss = 'https://fhir.epic.com/interconnect-fhir-oauth';\n\n  // Get the 'iss' parameter from the URL or use the fallback\n  const urlParams = new URLSearchParams(window.location.search);\n  const iss = urlParams.get('iss') || fallbackIss;\n  if (!iss) {\n    console.error('No FHIR server URL found. Please specify it as `iss`.');\n    return;\n  }\n\n  // Authorize application\n  FHIR.oauth2.init({\n    clientId: '163c83cd-ec2e-45d1-881e-28177fcc8089',\n    scope: 'patient/DocumentReference.read patient/DocumentReference.write patient/Observation.read patient/Observation.write openid profile',\n    redirectUri: 'http://localhost:3000',\n    iss: iss // Use the determined FHIR server URL\n  }).then(client => {\n    ReactDOM.render(/*#__PURE__*/_jsxDEV(App, {\n      client: client\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this), rootElement);\n  }).catch(error => {\n    console.error('FHIR initialization failed:', error);\n  });\n};\nsmartLaunch();","map":{"version":3,"names":["React","ReactDOM","App","FHIR","jsxDEV","_jsxDEV","rootElement","document","getElementById","smartLaunch","fallbackIss","urlParams","URLSearchParams","window","location","search","iss","get","console","error","oauth2","init","clientId","scope","redirectUri","then","client","render","fileName","_jsxFileName","lineNumber","columnNumber","catch"],"sources":["/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/index.js"],"sourcesContent":["//index.js\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport FHIR from 'fhirclient';\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nconst smartLaunch = () => {\r\n  // Fallback FHIR server URL for local testing\r\n  const fallbackIss = 'https://fhir.epic.com/interconnect-fhir-oauth';\r\n\r\n  // Get the 'iss' parameter from the URL or use the fallback\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const iss = urlParams.get('iss') || fallbackIss;\r\n\r\n  if (!iss) {\r\n    console.error('No FHIR server URL found. Please specify it as `iss`.');\r\n    return;\r\n  }\r\n\r\n  // Authorize application\r\n  FHIR.oauth2\r\n    .init({\r\n      clientId: '163c83cd-ec2e-45d1-881e-28177fcc8089',\r\n      scope: 'patient/DocumentReference.read patient/DocumentReference.write patient/Observation.read patient/Observation.write openid profile',\r\n      redirectUri: 'http://localhost:3000',\r\n      iss: iss, // Use the determined FHIR server URL\r\n    })\r\n    .then(client => {\r\n      ReactDOM.render(<App client={client} />, rootElement);\r\n    })\r\n    .catch(error => {\r\n      console.error('FHIR initialization failed:', error);\r\n    });\r\n};\r\n\r\nsmartLaunch();\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAO,sCAAsC;AAC7C,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,IAAI,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB;EACA,MAAMC,WAAW,GAAG,+CAA+C;;EAEnE;EACA,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;EAC7D,MAAMC,GAAG,GAAGL,SAAS,CAACM,GAAG,CAAC,KAAK,CAAC,IAAIP,WAAW;EAE/C,IAAI,CAACM,GAAG,EAAE;IACRE,OAAO,CAACC,KAAK,CAAC,uDAAuD,CAAC;IACtE;EACF;;EAEA;EACAhB,IAAI,CAACiB,MAAM,CACRC,IAAI,CAAC;IACJC,QAAQ,EAAE,sCAAsC;IAChDC,KAAK,EAAE,kIAAkI;IACzIC,WAAW,EAAE,uBAAuB;IACpCR,GAAG,EAAEA,GAAG,CAAE;EACZ,CAAC,CAAC,CACDS,IAAI,CAACC,MAAM,IAAI;IACdzB,QAAQ,CAAC0B,MAAM,cAACtB,OAAA,CAACH,GAAG;MAACwB,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAEzB,WAAW,CAAC;EACvD,CAAC,CAAC,CACD0B,KAAK,CAACb,KAAK,IAAI;IACdD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD,CAAC,CAAC;AACN,CAAC;AAEDV,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}