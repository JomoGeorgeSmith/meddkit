{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/PatientDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, Container, Table, Form } from \"react-bootstrap\";\nimport \"./PatientDetails.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PatientDetails({\n  client\n}) {\n  _s();\n  var _patient$name, _patient$name$, _patient$name$$given, _patient$name2, _patient$name2$;\n  const {\n    id\n  } = useParams();\n  const [patient, setPatient] = useState(null);\n  const [encounters, setEncounters] = useState([]);\n  const [notes, setNotes] = useState([]);\n  const [conditions, setConditions] = useState([]);\n  const [newRows, setNewRows] = useState([]);\n  // State for tracking loading row\n  const [loadingRow, setLoadingRow] = useState(null);\n  useEffect(() => {\n    client.request(`Patient/${id}`).then(data => setPatient(data));\n    client.request(`Encounter?patient=${id}`).then(data => {\n      var _data$entry;\n      setEncounters(((_data$entry = data.entry) === null || _data$entry === void 0 ? void 0 : _data$entry.map(entry => entry.resource)) || []);\n    });\n    client.request(`Observation?patient=${id}`).then(data => {\n      var _data$entry2;\n      setNotes(((_data$entry2 = data.entry) === null || _data$entry2 === void 0 ? void 0 : _data$entry2.map(entry => entry.resource)) || []);\n    });\n    client.request(`Condition?patient=${id}`).then(data => {\n      var _data$entry3;\n      setConditions(((_data$entry3 = data.entry) === null || _data$entry3 === void 0 ? void 0 : _data$entry3.map(entry => entry.resource)) || []);\n    });\n  }, [client, id]);\n  const formatDate = date => {\n    if (!date) return \"N/A\";\n    return new Intl.DateTimeFormat(\"en-US\", {\n      dateStyle: \"long\"\n    }).format(new Date(date));\n  };\n  const visitData = [...encounters.map(encounter => {\n    var _encounter$period, _visitNotes$, _visitNotes$2, _visitNotes$2$valueCo, _visitConditions$, _visitConditions$$cod, _visitConditions$$cod2, _visitConditions$$cod3, _visitConditions$2, _visitConditions$2$co, _visitConditions$2$co2, _visitConditions$2$co3;\n    const encounterId = encounter.id;\n    const visitNotes = notes.filter(note => {\n      var _note$encounter;\n      return ((_note$encounter = note.encounter) === null || _note$encounter === void 0 ? void 0 : _note$encounter.reference) === `Encounter/${encounterId}`;\n    });\n    const visitConditions = conditions.filter(condition => {\n      var _condition$encounter;\n      return ((_condition$encounter = condition.encounter) === null || _condition$encounter === void 0 ? void 0 : _condition$encounter.reference) === `Encounter/${encounterId}`;\n    });\n    return {\n      id: encounterId,\n      date: ((_encounter$period = encounter.period) === null || _encounter$period === void 0 ? void 0 : _encounter$period.start) || \"\",\n      note: ((_visitNotes$ = visitNotes[0]) === null || _visitNotes$ === void 0 ? void 0 : _visitNotes$.valueString) || ((_visitNotes$2 = visitNotes[0]) === null || _visitNotes$2 === void 0 ? void 0 : (_visitNotes$2$valueCo = _visitNotes$2.valueCodeableConcept) === null || _visitNotes$2$valueCo === void 0 ? void 0 : _visitNotes$2$valueCo.text) || \"\",\n      icdCode: ((_visitConditions$ = visitConditions[0]) === null || _visitConditions$ === void 0 ? void 0 : (_visitConditions$$cod = _visitConditions$.code) === null || _visitConditions$$cod === void 0 ? void 0 : (_visitConditions$$cod2 = _visitConditions$$cod.coding) === null || _visitConditions$$cod2 === void 0 ? void 0 : (_visitConditions$$cod3 = _visitConditions$$cod2[0]) === null || _visitConditions$$cod3 === void 0 ? void 0 : _visitConditions$$cod3.code) || \"\",\n      condition: ((_visitConditions$2 = visitConditions[0]) === null || _visitConditions$2 === void 0 ? void 0 : (_visitConditions$2$co = _visitConditions$2.code) === null || _visitConditions$2$co === void 0 ? void 0 : (_visitConditions$2$co2 = _visitConditions$2$co.coding) === null || _visitConditions$2$co2 === void 0 ? void 0 : (_visitConditions$2$co3 = _visitConditions$2$co2[0]) === null || _visitConditions$2$co3 === void 0 ? void 0 : _visitConditions$2$co3.display) || \"\"\n    };\n  }), ...newRows];\n  const handleEdit = (rowId, field, value) => {\n    if (rowId.startsWith(\"new-\")) {\n      setNewRows(prev => prev.map(row => row.id === rowId ? {\n        ...row,\n        [field]: value\n      } : row));\n    } else {\n      if (field === \"note\") {\n        setNotes(prev => prev.map(note => {\n          var _note$encounter2;\n          return ((_note$encounter2 = note.encounter) === null || _note$encounter2 === void 0 ? void 0 : _note$encounter2.reference) === `Encounter/${rowId}` ? {\n            ...note,\n            valueString: value\n          } : note;\n        }));\n      } else if (field === \"condition\") {\n        setConditions(prev => prev.map(condition => {\n          var _condition$encounter2;\n          return ((_condition$encounter2 = condition.encounter) === null || _condition$encounter2 === void 0 ? void 0 : _condition$encounter2.reference) === `Encounter/${rowId}` ? {\n            ...condition,\n            code: {\n              ...condition.code,\n              coding: [{\n                ...condition.code.coding[0],\n                display: value\n              }]\n            }\n          } : condition;\n        }));\n      } else if (field === \"icdCode\") {\n        setConditions(prev => prev.map(condition => {\n          var _condition$encounter3;\n          return ((_condition$encounter3 = condition.encounter) === null || _condition$encounter3 === void 0 ? void 0 : _condition$encounter3.reference) === `Encounter/${rowId}` ? {\n            ...condition,\n            code: {\n              ...condition.code,\n              coding: [{\n                ...condition.code.coding[0],\n                code: value\n              }]\n            }\n          } : condition;\n        }));\n      }\n    }\n  };\n  const handleAIGenerateICD = async rowId => {\n    setLoadingRow(rowId); // Show loader for the clicked row\n    try {\n      // Find the note value for the clicked row\n      const row = visitData.find(visit => visit.id === rowId);\n      if (!row || !row.note) {\n        alert(\"No note available to generate ICD.\");\n        return;\n      }\n\n      // Simulate AI generation logic\n      const generatedCodes = await generateFakeICDAndCondition(row.note);\n\n      // Select the first valid code (if available)\n      const validCode = generatedCodes.find(code => code.code);\n      if (validCode) {\n        handleEdit(rowId, \"icdCode\", validCode.code);\n        handleEdit(rowId, \"condition\", validCode.condition);\n      } else {\n        alert(\"No valid ICD code generated. Please review the note or try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error generating ICD:\", error);\n      alert(\"Failed to generate ICD. Please try again.\");\n    } finally {\n      setLoadingRow(null); // Hide loader\n    }\n  };\n\n  // Mock AI generation function\n  const generateFakeICDAndCondition = async note => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve([{\n          condition: \"test1\",\n          code: \"A\",\n          description: \"blahblah\",\n          similarity: 0.213124124,\n          status: \"Good\"\n        }, {\n          condition: \"test2\",\n          code: null,\n          description: null,\n          similarity: null,\n          status: \"Skipped, no matches in top 500 with similarity > 0.4\"\n        }]);\n      }, 2000); // Simulate API processing delay\n    });\n  };\n  const addRow = () => {\n    const newRow = {\n      id: `new-${Date.now()}`,\n      date: new Date().toISOString(),\n      note: \"\",\n      condition: \"\",\n      icdCode: \"\"\n    };\n    setNewRows(prev => [...prev, newRow]);\n  };\n  const saveChanges = async () => {\n    try {\n      var _updatedEncounters$en, _updatedNotes$entry, _updatedConditions$en;\n      // Save existing notes and conditions\n      const conditionPromises = conditions.map(condition => client.update(condition).catch(error => {\n        console.error(\"Error updating condition:\", condition, error);\n      }));\n      const notePromises = notes.map(note => client.update(note).catch(error => {\n        console.error(\"Error updating note:\", note, error);\n      }));\n\n      // Save new rows as FHIR resources\n      for (const row of newRows) {\n        if (!row.date || !row.note || !row.condition || !row.icdCode) {\n          console.warn(\"Skipping incomplete row:\", row);\n          continue;\n        }\n        const encounter = {\n          resourceType: \"Encounter\",\n          subject: {\n            reference: `Patient/${id}`\n          },\n          period: {\n            start: row.date\n          }\n        };\n        const newEncounter = await client.create(encounter);\n        const condition = {\n          resourceType: \"Condition\",\n          subject: {\n            reference: `Patient/${id}`\n          },\n          encounter: {\n            reference: `Encounter/${newEncounter.id}`\n          },\n          code: {\n            coding: [{\n              code: row.icdCode,\n              display: row.condition\n            }]\n          }\n        };\n        await client.create(condition);\n        const note = {\n          resourceType: \"Observation\",\n          status: \"final\",\n          category: [{\n            coding: [{\n              system: \"http://terminology.hl7.org/CodeSystem/observation-category\",\n              code: \"clinical\",\n              display: \"Clinical\"\n            }]\n          }],\n          code: {\n            coding: [{\n              system: \"http://loinc.org\",\n              code: \"34133-9\",\n              display: \"History and physical note\"\n            }]\n          },\n          subject: {\n            reference: `Patient/${id}`\n          },\n          encounter: {\n            reference: `Encounter/${newEncounter.id}`\n          },\n          effectiveDateTime: row.date,\n          valueString: row.note\n        };\n        await client.create(note);\n      }\n      await Promise.all([...conditionPromises, ...notePromises]);\n      alert(\"Changes saved successfully!\");\n      setNewRows([]);\n\n      // Refresh data\n      const updatedEncounters = await client.request(`Encounter?patient=${id}`);\n      setEncounters(((_updatedEncounters$en = updatedEncounters.entry) === null || _updatedEncounters$en === void 0 ? void 0 : _updatedEncounters$en.map(entry => entry.resource)) || []);\n      const updatedNotes = await client.request(`DocumentReference?patient=${id}`);\n      setNotes(((_updatedNotes$entry = updatedNotes.entry) === null || _updatedNotes$entry === void 0 ? void 0 : _updatedNotes$entry.map(entry => entry.resource)) || []);\n      const updatedConditions = await client.request(`Condition?patient=${id}`);\n      setConditions(((_updatedConditions$en = updatedConditions.entry) === null || _updatedConditions$en === void 0 ? void 0 : _updatedConditions$en.map(entry => entry.resource)) || []);\n    } catch (error) {\n      console.error(\"Error saving changes:\", error);\n      alert(\"Error saving changes.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"patient-details-container\",\n    children: patient ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"modern-title\",\n        children: \"Patient Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-card mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-card-header\",\n          children: \"Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Full Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 33\n            }, this), \" \", `${(_patient$name = patient.name) === null || _patient$name === void 0 ? void 0 : (_patient$name$ = _patient$name[0]) === null || _patient$name$ === void 0 ? void 0 : (_patient$name$$given = _patient$name$.given) === null || _patient$name$$given === void 0 ? void 0 : _patient$name$$given.join(\" \")} ${(_patient$name2 = patient.name) === null || _patient$name2 === void 0 ? void 0 : (_patient$name2$ = _patient$name2[0]) === null || _patient$name2$ === void 0 ? void 0 : _patient$name2$.family}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Gender:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this), \" \", patient.gender || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Birthdate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this), \" \", formatDate(patient.birthDate)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-card mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-card-header\",\n          children: \"Visit Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            className: \"modern-table\",\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date of Visit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Note\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Condition\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"ICD Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: visitData.filter(visit => visit.id.startsWith(\"new-\") ||\n              // Include all new rows\n              visit.note || visit.condition || visit.icdCode // Keep rows with at least one field filled\n              ).map(visit => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatDate(visit.date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 2,\n                    className: \"modern-input\",\n                    value: visit.note || \"\",\n                    onChange: e => handleEdit(visit.id, \"note\", e.target.value || \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    className: \"modern-input\",\n                    value: visit.condition || \"\",\n                    onChange: e => handleEdit(visit.id, \"condition\", e.target.value || \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      alignItems: \"center\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      className: \"modern-input\",\n                      value: visit.icdCode || \"\",\n                      onChange: e => handleEdit(visit.id, \"icdCode\", e.target.value || \"\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"icd-icon-container\",\n                      style: {\n                        marginLeft: \"10px\",\n                        position: \"relative\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"link\",\n                        onClick: () => handleAIGenerateICD(visit.id),\n                        disabled: loadingRow === visit.id // Disable button during loading\n                        ,\n                        children: loadingRow === visit.id ? /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fas fa-spinner fa-spin\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 349,\n                          columnNumber: 37\n                        }, this) // Loader icon\n                        : /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fas fa-brain\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 351,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 343,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"tooltip-text\",\n                        children: \"Click to have AI generate the ICD for you\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 354,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 17\n                }, this)]\n              }, visit.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 13\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            className: \"modern-button mt-3\",\n            onClick: addRow,\n            children: \"Add Row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"modern-button\",\n          onClick: saveChanges,\n          children: \"Save All Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading patient data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientDetails, \"CMjqutnUnzEVOis0GEUOS5yYBcY=\", false, function () {\n  return [useParams];\n});\n_c = PatientDetails;\nvar _c;\n$RefreshReg$(_c, \"PatientDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Button","Container","Table","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","PatientDetails","client","_s","_patient$name","_patient$name$","_patient$name$$given","_patient$name2","_patient$name2$","id","patient","setPatient","encounters","setEncounters","notes","setNotes","conditions","setConditions","newRows","setNewRows","loadingRow","setLoadingRow","request","then","data","_data$entry","entry","map","resource","_data$entry2","_data$entry3","formatDate","date","Intl","DateTimeFormat","dateStyle","format","Date","visitData","encounter","_encounter$period","_visitNotes$","_visitNotes$2","_visitNotes$2$valueCo","_visitConditions$","_visitConditions$$cod","_visitConditions$$cod2","_visitConditions$$cod3","_visitConditions$2","_visitConditions$2$co","_visitConditions$2$co2","_visitConditions$2$co3","encounterId","visitNotes","filter","note","_note$encounter","reference","visitConditions","condition","_condition$encounter","period","start","valueString","valueCodeableConcept","text","icdCode","code","coding","display","handleEdit","rowId","field","value","startsWith","prev","row","_note$encounter2","_condition$encounter2","_condition$encounter3","handleAIGenerateICD","find","visit","alert","generatedCodes","generateFakeICDAndCondition","validCode","error","console","Promise","resolve","setTimeout","description","similarity","status","addRow","newRow","now","toISOString","saveChanges","_updatedEncounters$en","_updatedNotes$entry","_updatedConditions$en","conditionPromises","update","catch","notePromises","warn","resourceType","subject","newEncounter","create","category","system","effectiveDateTime","all","updatedEncounters","updatedNotes","updatedConditions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","given","join","family","gender","birthDate","responsive","Control","as","rows","onChange","e","target","type","style","alignItems","marginLeft","position","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/PatientDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, Container, Table, Form } from \"react-bootstrap\";\nimport \"./PatientDetails.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n\nexport default function PatientDetails({ client }) {\n    const { id } = useParams();\n    const [patient, setPatient] = useState(null);\n    const [encounters, setEncounters] = useState([]);\n    const [notes, setNotes] = useState([]);\n    const [conditions, setConditions] = useState([]);\n    const [newRows, setNewRows] = useState([]);\n    // State for tracking loading row\nconst [loadingRow, setLoadingRow] = useState(null);\n\n    useEffect(() => {\n        client.request(`Patient/${id}`).then((data) => setPatient(data));\n        client.request(`Encounter?patient=${id}`).then((data) => {\n            setEncounters(data.entry?.map((entry) => entry.resource) || []);\n        });\n        client.request(`Observation?patient=${id}`).then((data) => {\n            setNotes(data.entry?.map((entry) => entry.resource) || []);\n        });\n        client.request(`Condition?patient=${id}`).then((data) => {\n            setConditions(data.entry?.map((entry) => entry.resource) || []);\n        });\n    }, [client, id]);\n    \n\n    const formatDate = (date) => {\n        if (!date) return \"N/A\";\n        return new Intl.DateTimeFormat(\"en-US\", { dateStyle: \"long\" }).format(\n            new Date(date)\n        );\n    };\n\n    const visitData = [\n        ...encounters.map((encounter) => {\n            const encounterId = encounter.id;\n            const visitNotes = notes.filter(\n                (note) => note.encounter?.reference === `Encounter/${encounterId}`\n            );\n            \n            const visitConditions = conditions.filter(\n                (condition) => condition.encounter?.reference === `Encounter/${encounterId}`\n            );\n    \n            return {\n                id: encounterId,\n                date: encounter.period?.start || \"\",\n                note: visitNotes[0]?.valueString || visitNotes[0]?.valueCodeableConcept?.text || \"\",\n                icdCode: visitConditions[0]?.code?.coding?.[0]?.code || \"\",\n                condition: visitConditions[0]?.code?.coding?.[0]?.display || \"\",\n            };\n        }),\n        ...newRows,\n    ];\n    \n\n    const handleEdit = (rowId, field, value) => {\n        if (rowId.startsWith(\"new-\")) {\n            setNewRows((prev) =>\n                prev.map((row) =>\n                    row.id === rowId ? { ...row, [field]: value } : row\n                )\n            );\n        } else {\n            if (field === \"note\") {\n                setNotes((prev) =>\n                    prev.map((note) =>\n                        note.encounter?.reference === `Encounter/${rowId}`\n                            ? { ...note, valueString: value }\n                            : note\n                    )\n                );\n            } else if (field === \"condition\") {\n                setConditions((prev) =>\n                    prev.map((condition) =>\n                        condition.encounter?.reference === `Encounter/${rowId}`\n                            ? { ...condition, code: { ...condition.code, coding: [{ ...condition.code.coding[0], display: value }] } }\n                            : condition\n                    )\n                );\n            } else if (field === \"icdCode\") {\n                setConditions((prev) =>\n                    prev.map((condition) =>\n                        condition.encounter?.reference === `Encounter/${rowId}`\n                            ? { ...condition, code: { ...condition.code, coding: [{ ...condition.code.coding[0], code: value }] } }\n                            : condition\n                    )\n                );\n            }\n        }\n    };\n    \n    const handleAIGenerateICD = async (rowId) => {\n        setLoadingRow(rowId); // Show loader for the clicked row\n        try {\n            // Find the note value for the clicked row\n            const row = visitData.find((visit) => visit.id === rowId);\n            if (!row || !row.note) {\n                alert(\"No note available to generate ICD.\");\n                return;\n            }\n    \n            // Simulate AI generation logic\n            const generatedCodes = await generateFakeICDAndCondition(row.note);\n    \n            // Select the first valid code (if available)\n            const validCode = generatedCodes.find((code) => code.code);\n    \n            if (validCode) {\n                handleEdit(rowId, \"icdCode\", validCode.code);\n                handleEdit(rowId, \"condition\", validCode.condition);\n            } else {\n                alert(\"No valid ICD code generated. Please review the note or try again.\");\n            }\n        } catch (error) {\n            console.error(\"Error generating ICD:\", error);\n            alert(\"Failed to generate ICD. Please try again.\");\n        } finally {\n            setLoadingRow(null); // Hide loader\n        }\n    };\n    \n    // Mock AI generation function\n    const generateFakeICDAndCondition = async (note) => {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve([\n                    {\n                        condition: \"test1\",\n                        code: \"A\",\n                        description: \"blahblah\",\n                        similarity: 0.213124124,\n                        status: \"Good\",\n                    },\n                    {\n                        condition: \"test2\",\n                        code: null,\n                        description: null,\n                        similarity: null,\n                        status: \"Skipped, no matches in top 500 with similarity > 0.4\",\n                    },\n                ]);\n            }, 2000); // Simulate API processing delay\n        });\n    };\n    \n\n\n    const addRow = () => {\n        const newRow = {\n            id: `new-${Date.now()}`,\n            date: new Date().toISOString(),\n            note: \"\",\n            condition: \"\",\n            icdCode: \"\",\n        };\n        setNewRows((prev) => [...prev, newRow]);\n    };\n\n    const saveChanges = async () => {\n        try {\n            // Save existing notes and conditions\n            const conditionPromises = conditions.map((condition) =>\n                client.update(condition).catch((error) => {\n                    console.error(\"Error updating condition:\", condition, error);\n                })\n            );\n\n            const notePromises = notes.map((note) =>\n                client.update(note).catch((error) => {\n                    console.error(\"Error updating note:\", note, error);\n                })\n            );\n\n            // Save new rows as FHIR resources\n            for (const row of newRows) {\n                if (!row.date || !row.note || !row.condition || !row.icdCode) {\n                    console.warn(\"Skipping incomplete row:\", row);\n                    continue;\n                }\n\n                const encounter = {\n                    resourceType: \"Encounter\",\n                    subject: { reference: `Patient/${id}` },\n                    period: { start: row.date },\n                };\n                const newEncounter = await client.create(encounter);\n\n                const condition = {\n                    resourceType: \"Condition\",\n                    subject: { reference: `Patient/${id}` },\n                    encounter: { reference: `Encounter/${newEncounter.id}` },\n                    code: {\n                        coding: [\n                            {\n                                code: row.icdCode,\n                                display: row.condition,\n                            },\n                        ],\n                    },\n                };\n                await client.create(condition);\n\n                const note = {\n                    resourceType: \"Observation\",\n                    status: \"final\",\n                    category: [\n                        {\n                            coding: [\n                                {\n                                    system: \"http://terminology.hl7.org/CodeSystem/observation-category\",\n                                    code: \"clinical\",\n                                    display: \"Clinical\",\n                                },\n                            ],\n                        },\n                    ],\n                    code: {\n                        coding: [\n                            {\n                                system: \"http://loinc.org\",\n                                code: \"34133-9\",\n                                display: \"History and physical note\",\n                            },\n                        ],\n                    },\n                    subject: { reference: `Patient/${id}` },\n                    encounter: { reference: `Encounter/${newEncounter.id}` },\n                    effectiveDateTime: row.date,\n                    valueString: row.note,\n                };\n                await client.create(note);\n                \n                \n            }\n\n            await Promise.all([...conditionPromises, ...notePromises]);\n\n            alert(\"Changes saved successfully!\");\n            setNewRows([]);\n\n            // Refresh data\n            const updatedEncounters = await client.request(`Encounter?patient=${id}`);\n            setEncounters(updatedEncounters.entry?.map((entry) => entry.resource) || []);\n\n            const updatedNotes = await client.request(`DocumentReference?patient=${id}`);\n            setNotes(updatedNotes.entry?.map((entry) => entry.resource) || []);\n\n            const updatedConditions = await client.request(`Condition?patient=${id}`);\n            setConditions(updatedConditions.entry?.map((entry) => entry.resource) || []);\n        } catch (error) {\n            console.error(\"Error saving changes:\", error);\n            alert(\"Error saving changes.\");\n        }\n    };\n\n    return (\n        <Container className=\"patient-details-container\">\n            {patient ? (\n                <>\n                    <h1 className=\"modern-title\">Patient Details</h1>\n\n                    {/* Patient Basic Information */}\n                    <div className=\"custom-card mb-4\">\n                        <div className=\"custom-card-header\">Basic Information</div>\n                        <div className=\"custom-card-body\">\n                            <p>\n                                <strong>Full Name:</strong>{\" \"}\n                                {`${patient.name?.[0]?.given?.join(\" \")} ${patient.name?.[0]?.family}`}\n                            </p>\n                            <p>\n                                <strong>Gender:</strong> {patient.gender || \"N/A\"}\n                            </p>\n                            <p>\n                                <strong>Birthdate:</strong> {formatDate(patient.birthDate)}\n                            </p>\n                        </div>\n                    </div>\n\n                    {/* Visit Details */}\n                    <div className=\"custom-card mb-4\">\n                        <div className=\"custom-card-header\">Visit Details</div>\n                        <div className=\"custom-card-body\">\n                            <Table className=\"modern-table\" responsive>\n                                <thead>\n                                    <tr>\n                                        <th>Date of Visit</th>\n                                        <th>Note</th>\n                                        <th>Condition</th>\n                                        <th>ICD Code</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n    {visitData\n        .filter(\n            (visit) =>\n                visit.id.startsWith(\"new-\") || // Include all new rows\n                visit.note || visit.condition || visit.icdCode // Keep rows with at least one field filled\n        )\n        .map((visit) => (\n            <tr key={visit.id}>\n                <td>{formatDate(visit.date)}</td>\n                <td>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows={2}\n                        className=\"modern-input\"\n                        value={visit.note || \"\"}\n                        onChange={(e) =>\n                            handleEdit(visit.id, \"note\", e.target.value || \"\")\n                        }\n                    />\n                </td>\n                <td>\n                    <Form.Control\n                        type=\"text\"\n                        className=\"modern-input\"\n                        value={visit.condition || \"\"}\n                        onChange={(e) =>\n                            handleEdit(visit.id, \"condition\", e.target.value || \"\")\n                        }\n                    />\n                </td>\n                <td>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <Form.Control\n                            type=\"text\"\n                            className=\"modern-input\"\n                            value={visit.icdCode || \"\"}\n                            onChange={(e) =>\n                                handleEdit(visit.id, \"icdCode\", e.target.value || \"\")\n                            }\n                        />\n                        <div\n                            className=\"icd-icon-container\"\n                            style={{ marginLeft: \"10px\", position: \"relative\" }}\n                        >\n                            <Button\n                                variant=\"link\"\n                                onClick={() => handleAIGenerateICD(visit.id)}\n                                disabled={loadingRow === visit.id} // Disable button during loading\n                            >\n                                {loadingRow === visit.id ? (\n                                    <i className=\"fas fa-spinner fa-spin\"></i> // Loader icon\n                                ) : (\n                                    <i className=\"fas fa-brain\"></i>\n                                )}\n                            </Button>\n                            <span className=\"tooltip-text\">Click to have AI generate the ICD for you</span>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        ))}\n</tbody>\n\n\n                            </Table>\n                            <Button variant=\"success\" className=\"modern-button mt-3\" onClick={addRow}>\n                                Add Row\n                            </Button>\n                        </div>\n                    </div>\n\n                    <div className=\"text-center\">\n                        <Button variant=\"primary\" className=\"modern-button\" onClick={saveChanges}>\n                            Save All Changes\n                        </Button>\n                    </div>\n                </>\n            ) : (\n                <p>Loading patient data...</p>\n            )}\n        </Container>\n    );\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,IAAI,QAAQ,iBAAiB;AAChE,OAAO,sBAAsB;AAC7B,OAAO,+CAA+C;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGvD,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,oBAAA,EAAAC,cAAA,EAAAC,eAAA;EAC/C,MAAM;IAAEC;EAAG,CAAC,GAAGjB,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACJ,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZY,MAAM,CAACoB,OAAO,CAAC,WAAWb,EAAE,EAAE,CAAC,CAACc,IAAI,CAAEC,IAAI,IAAKb,UAAU,CAACa,IAAI,CAAC,CAAC;IAChEtB,MAAM,CAACoB,OAAO,CAAC,qBAAqBb,EAAE,EAAE,CAAC,CAACc,IAAI,CAAEC,IAAI,IAAK;MAAA,IAAAC,WAAA;MACrDZ,aAAa,CAAC,EAAAY,WAAA,GAAAD,IAAI,CAACE,KAAK,cAAAD,WAAA,uBAAVA,WAAA,CAAYE,GAAG,CAAED,KAAK,IAAKA,KAAK,CAACE,QAAQ,CAAC,KAAI,EAAE,CAAC;IACnE,CAAC,CAAC;IACF1B,MAAM,CAACoB,OAAO,CAAC,uBAAuBb,EAAE,EAAE,CAAC,CAACc,IAAI,CAAEC,IAAI,IAAK;MAAA,IAAAK,YAAA;MACvDd,QAAQ,CAAC,EAAAc,YAAA,GAAAL,IAAI,CAACE,KAAK,cAAAG,YAAA,uBAAVA,YAAA,CAAYF,GAAG,CAAED,KAAK,IAAKA,KAAK,CAACE,QAAQ,CAAC,KAAI,EAAE,CAAC;IAC9D,CAAC,CAAC;IACF1B,MAAM,CAACoB,OAAO,CAAC,qBAAqBb,EAAE,EAAE,CAAC,CAACc,IAAI,CAAEC,IAAI,IAAK;MAAA,IAAAM,YAAA;MACrDb,aAAa,CAAC,EAAAa,YAAA,GAAAN,IAAI,CAACE,KAAK,cAAAI,YAAA,uBAAVA,YAAA,CAAYH,GAAG,CAAED,KAAK,IAAKA,KAAK,CAACE,QAAQ,CAAC,KAAI,EAAE,CAAC;IACnE,CAAC,CAAC;EACN,CAAC,EAAE,CAAC1B,MAAM,EAAEO,EAAE,CAAC,CAAC;EAGhB,MAAMsB,UAAU,GAAIC,IAAI,IAAK;IACzB,IAAI,CAACA,IAAI,EAAE,OAAO,KAAK;IACvB,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAC,CAAC,CAACC,MAAM,CACjE,IAAIC,IAAI,CAACL,IAAI,CACjB,CAAC;EACL,CAAC;EAED,MAAMM,SAAS,GAAG,CACd,GAAG1B,UAAU,CAACe,GAAG,CAAEY,SAAS,IAAK;IAAA,IAAAC,iBAAA,EAAAC,YAAA,EAAAC,aAAA,EAAAC,qBAAA,EAAAC,iBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,kBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IAC7B,MAAMC,WAAW,GAAGb,SAAS,CAAC9B,EAAE;IAChC,MAAM4C,UAAU,GAAGvC,KAAK,CAACwC,MAAM,CAC1BC,IAAI;MAAA,IAAAC,eAAA;MAAA,OAAK,EAAAA,eAAA,GAAAD,IAAI,CAAChB,SAAS,cAAAiB,eAAA,uBAAdA,eAAA,CAAgBC,SAAS,MAAK,aAAaL,WAAW,EAAE;IAAA,CACtE,CAAC;IAED,MAAMM,eAAe,GAAG1C,UAAU,CAACsC,MAAM,CACpCK,SAAS;MAAA,IAAAC,oBAAA;MAAA,OAAK,EAAAA,oBAAA,GAAAD,SAAS,CAACpB,SAAS,cAAAqB,oBAAA,uBAAnBA,oBAAA,CAAqBH,SAAS,MAAK,aAAaL,WAAW,EAAE;IAAA,CAChF,CAAC;IAED,OAAO;MACH3C,EAAE,EAAE2C,WAAW;MACfpB,IAAI,EAAE,EAAAQ,iBAAA,GAAAD,SAAS,CAACsB,MAAM,cAAArB,iBAAA,uBAAhBA,iBAAA,CAAkBsB,KAAK,KAAI,EAAE;MACnCP,IAAI,EAAE,EAAAd,YAAA,GAAAY,UAAU,CAAC,CAAC,CAAC,cAAAZ,YAAA,uBAAbA,YAAA,CAAesB,WAAW,OAAArB,aAAA,GAAIW,UAAU,CAAC,CAAC,CAAC,cAAAX,aAAA,wBAAAC,qBAAA,GAAbD,aAAA,CAAesB,oBAAoB,cAAArB,qBAAA,uBAAnCA,qBAAA,CAAqCsB,IAAI,KAAI,EAAE;MACnFC,OAAO,EAAE,EAAAtB,iBAAA,GAAAc,eAAe,CAAC,CAAC,CAAC,cAAAd,iBAAA,wBAAAC,qBAAA,GAAlBD,iBAAA,CAAoBuB,IAAI,cAAAtB,qBAAA,wBAAAC,sBAAA,GAAxBD,qBAAA,CAA0BuB,MAAM,cAAAtB,sBAAA,wBAAAC,sBAAA,GAAhCD,sBAAA,CAAmC,CAAC,CAAC,cAAAC,sBAAA,uBAArCA,sBAAA,CAAuCoB,IAAI,KAAI,EAAE;MAC1DR,SAAS,EAAE,EAAAX,kBAAA,GAAAU,eAAe,CAAC,CAAC,CAAC,cAAAV,kBAAA,wBAAAC,qBAAA,GAAlBD,kBAAA,CAAoBmB,IAAI,cAAAlB,qBAAA,wBAAAC,sBAAA,GAAxBD,qBAAA,CAA0BmB,MAAM,cAAAlB,sBAAA,wBAAAC,sBAAA,GAAhCD,sBAAA,CAAmC,CAAC,CAAC,cAAAC,sBAAA,uBAArCA,sBAAA,CAAuCkB,OAAO,KAAI;IACjE,CAAC;EACL,CAAC,CAAC,EACF,GAAGnD,OAAO,CACb;EAGD,MAAMoD,UAAU,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAK;IACxC,IAAIF,KAAK,CAACG,UAAU,CAAC,MAAM,CAAC,EAAE;MAC1BvD,UAAU,CAAEwD,IAAI,IACZA,IAAI,CAAChD,GAAG,CAAEiD,GAAG,IACTA,GAAG,CAACnE,EAAE,KAAK8D,KAAK,GAAG;QAAE,GAAGK,GAAG;QAAE,CAACJ,KAAK,GAAGC;MAAM,CAAC,GAAGG,GACpD,CACJ,CAAC;IACL,CAAC,MAAM;MACH,IAAIJ,KAAK,KAAK,MAAM,EAAE;QAClBzD,QAAQ,CAAE4D,IAAI,IACVA,IAAI,CAAChD,GAAG,CAAE4B,IAAI;UAAA,IAAAsB,gBAAA;UAAA,OACV,EAAAA,gBAAA,GAAAtB,IAAI,CAAChB,SAAS,cAAAsC,gBAAA,uBAAdA,gBAAA,CAAgBpB,SAAS,MAAK,aAAac,KAAK,EAAE,GAC5C;YAAE,GAAGhB,IAAI;YAAEQ,WAAW,EAAEU;UAAM,CAAC,GAC/BlB,IAAI;QAAA,CACd,CACJ,CAAC;MACL,CAAC,MAAM,IAAIiB,KAAK,KAAK,WAAW,EAAE;QAC9BvD,aAAa,CAAE0D,IAAI,IACfA,IAAI,CAAChD,GAAG,CAAEgC,SAAS;UAAA,IAAAmB,qBAAA;UAAA,OACf,EAAAA,qBAAA,GAAAnB,SAAS,CAACpB,SAAS,cAAAuC,qBAAA,uBAAnBA,qBAAA,CAAqBrB,SAAS,MAAK,aAAac,KAAK,EAAE,GACjD;YAAE,GAAGZ,SAAS;YAAEQ,IAAI,EAAE;cAAE,GAAGR,SAAS,CAACQ,IAAI;cAAEC,MAAM,EAAE,CAAC;gBAAE,GAAGT,SAAS,CAACQ,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;gBAAEC,OAAO,EAAEI;cAAM,CAAC;YAAE;UAAE,CAAC,GACxGd,SAAS;QAAA,CACnB,CACJ,CAAC;MACL,CAAC,MAAM,IAAIa,KAAK,KAAK,SAAS,EAAE;QAC5BvD,aAAa,CAAE0D,IAAI,IACfA,IAAI,CAAChD,GAAG,CAAEgC,SAAS;UAAA,IAAAoB,qBAAA;UAAA,OACf,EAAAA,qBAAA,GAAApB,SAAS,CAACpB,SAAS,cAAAwC,qBAAA,uBAAnBA,qBAAA,CAAqBtB,SAAS,MAAK,aAAac,KAAK,EAAE,GACjD;YAAE,GAAGZ,SAAS;YAAEQ,IAAI,EAAE;cAAE,GAAGR,SAAS,CAACQ,IAAI;cAAEC,MAAM,EAAE,CAAC;gBAAE,GAAGT,SAAS,CAACQ,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;gBAAED,IAAI,EAAEM;cAAM,CAAC;YAAE;UAAE,CAAC,GACrGd,SAAS;QAAA,CACnB,CACJ,CAAC;MACL;IACJ;EACJ,CAAC;EAED,MAAMqB,mBAAmB,GAAG,MAAOT,KAAK,IAAK;IACzClD,aAAa,CAACkD,KAAK,CAAC,CAAC,CAAC;IACtB,IAAI;MACA;MACA,MAAMK,GAAG,GAAGtC,SAAS,CAAC2C,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACzE,EAAE,KAAK8D,KAAK,CAAC;MACzD,IAAI,CAACK,GAAG,IAAI,CAACA,GAAG,CAACrB,IAAI,EAAE;QACnB4B,KAAK,CAAC,oCAAoC,CAAC;QAC3C;MACJ;;MAEA;MACA,MAAMC,cAAc,GAAG,MAAMC,2BAA2B,CAACT,GAAG,CAACrB,IAAI,CAAC;;MAElE;MACA,MAAM+B,SAAS,GAAGF,cAAc,CAACH,IAAI,CAAEd,IAAI,IAAKA,IAAI,CAACA,IAAI,CAAC;MAE1D,IAAImB,SAAS,EAAE;QACXhB,UAAU,CAACC,KAAK,EAAE,SAAS,EAAEe,SAAS,CAACnB,IAAI,CAAC;QAC5CG,UAAU,CAACC,KAAK,EAAE,WAAW,EAAEe,SAAS,CAAC3B,SAAS,CAAC;MACvD,CAAC,MAAM;QACHwB,KAAK,CAAC,mEAAmE,CAAC;MAC9E;IACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CJ,KAAK,CAAC,2CAA2C,CAAC;IACtD,CAAC,SAAS;MACN9D,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB;EACJ,CAAC;;EAED;EACA,MAAMgE,2BAA2B,GAAG,MAAO9B,IAAI,IAAK;IAChD,OAAO,IAAIkC,OAAO,CAAEC,OAAO,IAAK;MAC5BC,UAAU,CAAC,MAAM;QACbD,OAAO,CAAC,CACJ;UACI/B,SAAS,EAAE,OAAO;UAClBQ,IAAI,EAAE,GAAG;UACTyB,WAAW,EAAE,UAAU;UACvBC,UAAU,EAAE,WAAW;UACvBC,MAAM,EAAE;QACZ,CAAC,EACD;UACInC,SAAS,EAAE,OAAO;UAClBQ,IAAI,EAAE,IAAI;UACVyB,WAAW,EAAE,IAAI;UACjBC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;QACZ,CAAC,CACJ,CAAC;MACN,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACd,CAAC,CAAC;EACN,CAAC;EAID,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjB,MAAMC,MAAM,GAAG;MACXvF,EAAE,EAAE,OAAO4B,IAAI,CAAC4D,GAAG,CAAC,CAAC,EAAE;MACvBjE,IAAI,EAAE,IAAIK,IAAI,CAAC,CAAC,CAAC6D,WAAW,CAAC,CAAC;MAC9B3C,IAAI,EAAE,EAAE;MACRI,SAAS,EAAE,EAAE;MACbO,OAAO,EAAE;IACb,CAAC;IACD/C,UAAU,CAAEwD,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEqB,MAAM,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MAAA,IAAAC,qBAAA,EAAAC,mBAAA,EAAAC,qBAAA;MACA;MACA,MAAMC,iBAAiB,GAAGvF,UAAU,CAACW,GAAG,CAAEgC,SAAS,IAC/CzD,MAAM,CAACsG,MAAM,CAAC7C,SAAS,CAAC,CAAC8C,KAAK,CAAElB,KAAK,IAAK;QACtCC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAE5B,SAAS,EAAE4B,KAAK,CAAC;MAChE,CAAC,CACL,CAAC;MAED,MAAMmB,YAAY,GAAG5F,KAAK,CAACa,GAAG,CAAE4B,IAAI,IAChCrD,MAAM,CAACsG,MAAM,CAACjD,IAAI,CAAC,CAACkD,KAAK,CAAElB,KAAK,IAAK;QACjCC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEhC,IAAI,EAAEgC,KAAK,CAAC;MACtD,CAAC,CACL,CAAC;;MAED;MACA,KAAK,MAAMX,GAAG,IAAI1D,OAAO,EAAE;QACvB,IAAI,CAAC0D,GAAG,CAAC5C,IAAI,IAAI,CAAC4C,GAAG,CAACrB,IAAI,IAAI,CAACqB,GAAG,CAACjB,SAAS,IAAI,CAACiB,GAAG,CAACV,OAAO,EAAE;UAC1DsB,OAAO,CAACmB,IAAI,CAAC,0BAA0B,EAAE/B,GAAG,CAAC;UAC7C;QACJ;QAEA,MAAMrC,SAAS,GAAG;UACdqE,YAAY,EAAE,WAAW;UACzBC,OAAO,EAAE;YAAEpD,SAAS,EAAE,WAAWhD,EAAE;UAAG,CAAC;UACvCoD,MAAM,EAAE;YAAEC,KAAK,EAAEc,GAAG,CAAC5C;UAAK;QAC9B,CAAC;QACD,MAAM8E,YAAY,GAAG,MAAM5G,MAAM,CAAC6G,MAAM,CAACxE,SAAS,CAAC;QAEnD,MAAMoB,SAAS,GAAG;UACdiD,YAAY,EAAE,WAAW;UACzBC,OAAO,EAAE;YAAEpD,SAAS,EAAE,WAAWhD,EAAE;UAAG,CAAC;UACvC8B,SAAS,EAAE;YAAEkB,SAAS,EAAE,aAAaqD,YAAY,CAACrG,EAAE;UAAG,CAAC;UACxD0D,IAAI,EAAE;YACFC,MAAM,EAAE,CACJ;cACID,IAAI,EAAES,GAAG,CAACV,OAAO;cACjBG,OAAO,EAAEO,GAAG,CAACjB;YACjB,CAAC;UAET;QACJ,CAAC;QACD,MAAMzD,MAAM,CAAC6G,MAAM,CAACpD,SAAS,CAAC;QAE9B,MAAMJ,IAAI,GAAG;UACTqD,YAAY,EAAE,aAAa;UAC3Bd,MAAM,EAAE,OAAO;UACfkB,QAAQ,EAAE,CACN;YACI5C,MAAM,EAAE,CACJ;cACI6C,MAAM,EAAE,4DAA4D;cACpE9C,IAAI,EAAE,UAAU;cAChBE,OAAO,EAAE;YACb,CAAC;UAET,CAAC,CACJ;UACDF,IAAI,EAAE;YACFC,MAAM,EAAE,CACJ;cACI6C,MAAM,EAAE,kBAAkB;cAC1B9C,IAAI,EAAE,SAAS;cACfE,OAAO,EAAE;YACb,CAAC;UAET,CAAC;UACDwC,OAAO,EAAE;YAAEpD,SAAS,EAAE,WAAWhD,EAAE;UAAG,CAAC;UACvC8B,SAAS,EAAE;YAAEkB,SAAS,EAAE,aAAaqD,YAAY,CAACrG,EAAE;UAAG,CAAC;UACxDyG,iBAAiB,EAAEtC,GAAG,CAAC5C,IAAI;UAC3B+B,WAAW,EAAEa,GAAG,CAACrB;QACrB,CAAC;QACD,MAAMrD,MAAM,CAAC6G,MAAM,CAACxD,IAAI,CAAC;MAG7B;MAEA,MAAMkC,OAAO,CAAC0B,GAAG,CAAC,CAAC,GAAGZ,iBAAiB,EAAE,GAAGG,YAAY,CAAC,CAAC;MAE1DvB,KAAK,CAAC,6BAA6B,CAAC;MACpChE,UAAU,CAAC,EAAE,CAAC;;MAEd;MACA,MAAMiG,iBAAiB,GAAG,MAAMlH,MAAM,CAACoB,OAAO,CAAC,qBAAqBb,EAAE,EAAE,CAAC;MACzEI,aAAa,CAAC,EAAAuF,qBAAA,GAAAgB,iBAAiB,CAAC1F,KAAK,cAAA0E,qBAAA,uBAAvBA,qBAAA,CAAyBzE,GAAG,CAAED,KAAK,IAAKA,KAAK,CAACE,QAAQ,CAAC,KAAI,EAAE,CAAC;MAE5E,MAAMyF,YAAY,GAAG,MAAMnH,MAAM,CAACoB,OAAO,CAAC,6BAA6Bb,EAAE,EAAE,CAAC;MAC5EM,QAAQ,CAAC,EAAAsF,mBAAA,GAAAgB,YAAY,CAAC3F,KAAK,cAAA2E,mBAAA,uBAAlBA,mBAAA,CAAoB1E,GAAG,CAAED,KAAK,IAAKA,KAAK,CAACE,QAAQ,CAAC,KAAI,EAAE,CAAC;MAElE,MAAM0F,iBAAiB,GAAG,MAAMpH,MAAM,CAACoB,OAAO,CAAC,qBAAqBb,EAAE,EAAE,CAAC;MACzEQ,aAAa,CAAC,EAAAqF,qBAAA,GAAAgB,iBAAiB,CAAC5F,KAAK,cAAA4E,qBAAA,uBAAvBA,qBAAA,CAAyB3E,GAAG,CAAED,KAAK,IAAKA,KAAK,CAACE,QAAQ,CAAC,KAAI,EAAE,CAAC;IAChF,CAAC,CAAC,OAAO2D,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CJ,KAAK,CAAC,uBAAuB,CAAC;IAClC;EACJ,CAAC;EAED,oBACIrF,OAAA,CAACJ,SAAS;IAAC6H,SAAS,EAAC,2BAA2B;IAAAC,QAAA,EAC3C9G,OAAO,gBACJZ,OAAA,CAAAE,SAAA;MAAAwH,QAAA,gBACI1H,OAAA;QAAIyH,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGjD9H,OAAA;QAAKyH,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7B1H,OAAA;UAAKyH,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3D9H,OAAA;UAAKyH,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7B1H,OAAA;YAAA0H,QAAA,gBACI1H,OAAA;cAAA0H,QAAA,EAAQ;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAAC,GAAG,EAC9B,IAAAxH,aAAA,GAAGM,OAAO,CAACmH,IAAI,cAAAzH,aAAA,wBAAAC,cAAA,GAAZD,aAAA,CAAe,CAAC,CAAC,cAAAC,cAAA,wBAAAC,oBAAA,GAAjBD,cAAA,CAAmByH,KAAK,cAAAxH,oBAAA,uBAAxBA,oBAAA,CAA0ByH,IAAI,CAAC,GAAG,CAAC,KAAAxH,cAAA,GAAIG,OAAO,CAACmH,IAAI,cAAAtH,cAAA,wBAAAC,eAAA,GAAZD,cAAA,CAAe,CAAC,CAAC,cAAAC,eAAA,uBAAjBA,eAAA,CAAmBwH,MAAM,EAAE;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvE,CAAC,eACJ9H,OAAA;YAAA0H,QAAA,gBACI1H,OAAA;cAAA0H,QAAA,EAAQ;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAClH,OAAO,CAACuH,MAAM,IAAI,KAAK;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC,eACJ9H,OAAA;YAAA0H,QAAA,gBACI1H,OAAA;cAAA0H,QAAA,EAAQ;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC7F,UAAU,CAACrB,OAAO,CAACwH,SAAS,CAAC;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAGN9H,OAAA;QAAKyH,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7B1H,OAAA;UAAKyH,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvD9H,OAAA;UAAKyH,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7B1H,OAAA,CAACH,KAAK;YAAC4H,SAAS,EAAC,cAAc;YAACY,UAAU;YAAAX,QAAA,gBACtC1H,OAAA;cAAA0H,QAAA,eACI1H,OAAA;gBAAA0H,QAAA,gBACI1H,OAAA;kBAAA0H,QAAA,EAAI;gBAAa;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACtB9H,OAAA;kBAAA0H,QAAA,EAAI;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACb9H,OAAA;kBAAA0H,QAAA,EAAI;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAClB9H,OAAA;kBAAA0H,QAAA,EAAI;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACR9H,OAAA;cAAA0H,QAAA,EAC3BlF,SAAS,CACLgB,MAAM,CACF4B,KAAK,IACFA,KAAK,CAACzE,EAAE,CAACiE,UAAU,CAAC,MAAM,CAAC;cAAI;cAC/BQ,KAAK,CAAC3B,IAAI,IAAI2B,KAAK,CAACvB,SAAS,IAAIuB,KAAK,CAAChB,OAAO,CAAC;cACvD,CAAC,CACAvC,GAAG,CAAEuD,KAAK,iBACPpF,OAAA;gBAAA0H,QAAA,gBACI1H,OAAA;kBAAA0H,QAAA,EAAKzF,UAAU,CAACmD,KAAK,CAAClD,IAAI;gBAAC;kBAAAyF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACjC9H,OAAA;kBAAA0H,QAAA,eACI1H,OAAA,CAACF,IAAI,CAACwI,OAAO;oBACTC,EAAE,EAAC,UAAU;oBACbC,IAAI,EAAE,CAAE;oBACRf,SAAS,EAAC,cAAc;oBACxB9C,KAAK,EAAES,KAAK,CAAC3B,IAAI,IAAI,EAAG;oBACxBgF,QAAQ,EAAGC,CAAC,IACRlE,UAAU,CAACY,KAAK,CAACzE,EAAE,EAAE,MAAM,EAAE+H,CAAC,CAACC,MAAM,CAAChE,KAAK,IAAI,EAAE;kBACpD;oBAAAgD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CAAC,eACL9H,OAAA;kBAAA0H,QAAA,eACI1H,OAAA,CAACF,IAAI,CAACwI,OAAO;oBACTM,IAAI,EAAC,MAAM;oBACXnB,SAAS,EAAC,cAAc;oBACxB9C,KAAK,EAAES,KAAK,CAACvB,SAAS,IAAI,EAAG;oBAC7B4E,QAAQ,EAAGC,CAAC,IACRlE,UAAU,CAACY,KAAK,CAACzE,EAAE,EAAE,WAAW,EAAE+H,CAAC,CAACC,MAAM,CAAChE,KAAK,IAAI,EAAE;kBACzD;oBAAAgD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CAAC,eACL9H,OAAA;kBAAA0H,QAAA,eACI1H,OAAA;oBAAK6I,KAAK,EAAE;sBAAEtE,OAAO,EAAE,MAAM;sBAAEuE,UAAU,EAAE;oBAAS,CAAE;oBAAApB,QAAA,gBAClD1H,OAAA,CAACF,IAAI,CAACwI,OAAO;sBACTM,IAAI,EAAC,MAAM;sBACXnB,SAAS,EAAC,cAAc;sBACxB9C,KAAK,EAAES,KAAK,CAAChB,OAAO,IAAI,EAAG;sBAC3BqE,QAAQ,EAAGC,CAAC,IACRlE,UAAU,CAACY,KAAK,CAACzE,EAAE,EAAE,SAAS,EAAE+H,CAAC,CAACC,MAAM,CAAChE,KAAK,IAAI,EAAE;oBACvD;sBAAAgD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACJ,CAAC,eACF9H,OAAA;sBACIyH,SAAS,EAAC,oBAAoB;sBAC9BoB,KAAK,EAAE;wBAAEE,UAAU,EAAE,MAAM;wBAAEC,QAAQ,EAAE;sBAAW,CAAE;sBAAAtB,QAAA,gBAEpD1H,OAAA,CAACL,MAAM;wBACHsJ,OAAO,EAAC,MAAM;wBACdC,OAAO,EAAEA,CAAA,KAAMhE,mBAAmB,CAACE,KAAK,CAACzE,EAAE,CAAE;wBAC7CwI,QAAQ,EAAE7H,UAAU,KAAK8D,KAAK,CAACzE,EAAG,CAAC;wBAAA;wBAAA+G,QAAA,EAElCpG,UAAU,KAAK8D,KAAK,CAACzE,EAAE,gBACpBX,OAAA;0BAAGyH,SAAS,EAAC;wBAAwB;0BAAAE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAI,CAAC,CAAC;wBAAA,eAE3C9H,OAAA;0BAAGyH,SAAS,EAAC;wBAAc;0BAAAE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAI;sBAClC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACG,CAAC,eACT9H,OAAA;wBAAMyH,SAAS,EAAC,cAAc;wBAAAC,QAAA,EAAC;sBAAyC;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC9E,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACL;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC;cAAA,GAnDA1C,KAAK,CAACzE,EAAE;gBAAAgH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAoDb,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAG2B,CAAC,eACR9H,OAAA,CAACL,MAAM;YAACsJ,OAAO,EAAC,SAAS;YAACxB,SAAS,EAAC,oBAAoB;YAACyB,OAAO,EAAEjD,MAAO;YAAAyB,QAAA,EAAC;UAE1E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEN9H,OAAA;QAAKyH,SAAS,EAAC,aAAa;QAAAC,QAAA,eACxB1H,OAAA,CAACL,MAAM;UAACsJ,OAAO,EAAC,SAAS;UAACxB,SAAS,EAAC,eAAe;UAACyB,OAAO,EAAE7C,WAAY;UAAAqB,QAAA,EAAC;QAE1E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA,eACR,CAAC,gBAEH9H,OAAA;MAAA0H,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAChC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEpB;AAACzH,EAAA,CArXuBF,cAAc;EAAA,QACnBT,SAAS;AAAA;AAAA0J,EAAA,GADJjJ,cAAc;AAAA,IAAAiJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}