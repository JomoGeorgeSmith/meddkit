{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport \"./App.css\";\nimport { PatientVisualizer } from \"fhir-visualizers\";\nimport { Spinner, Container, Button, Form } from \"react-bootstrap\";\n\n//This app attempts to get all ICD information of patients along with inforamtion written about them and update the ICD codes.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App({\n  client\n}) {\n  _s();\n  const [patient, setPatient] = useState(null);\n  const [logMessages, setLogMessages] = useState([]);\n  const [documentReference, setDocumentReference] = useState([]);\n  const [tempEdits, setTempEdits] = useState({}); // Temporary state for edits\n\n  // Enhanced log function\n  const log = useCallback((message, category = \"Info\", details = {}) => {\n    const timestamp = new Date().toISOString();\n    const fullMessage = `[${timestamp}] [${category}] ${message}`;\n    const formattedDetails = typeof details === \"object\" ? JSON.stringify(details, null, 2) : details;\n    console.log(fullMessage, formattedDetails);\n    setLogMessages(prev => [...prev, `${fullMessage} ${formattedDetails || \"\"}`]);\n  }, []);\n\n  // Fetch patient data on component mount\n  useEffect(() => {\n    if (!client) {\n      log(\"FHIR client is not initialized.\", \"Error\");\n      return;\n    }\n    client.patient.read().then(data => {\n      var _data$name, _data$name$, _data$name$$given, _data$name2, _data$name2$;\n      log(\"Patient data retrieved successfully.\", \"Success\", {\n        patientId: data.id,\n        patientName: `${(_data$name = data.name) === null || _data$name === void 0 ? void 0 : (_data$name$ = _data$name[0]) === null || _data$name$ === void 0 ? void 0 : (_data$name$$given = _data$name$.given) === null || _data$name$$given === void 0 ? void 0 : _data$name$$given.join(\" \")} ${(_data$name2 = data.name) === null || _data$name2 === void 0 ? void 0 : (_data$name2$ = _data$name2[0]) === null || _data$name2$ === void 0 ? void 0 : _data$name2$.family}`\n      });\n      setPatient(data);\n    }).catch(error => {\n      log(`Error fetching patient: ${error.message}`, \"Error\", {\n        error\n      });\n    });\n  }, [client, log]);\n\n  // Fetch DocumentReference and log full data including ICD-10 codes\n  const fetchDocumentReference = () => {\n    if (!patient) {\n      log(\"Patient not available for document reference retrieval.\", \"Warning\");\n      return;\n    }\n    const documentReferenceUrl = `DocumentReference?patient=${patient.id}`;\n    log(\"Fetching document reference from FHIR server.\", \"Info\", {\n      url: documentReferenceUrl\n    });\n    client.request(documentReferenceUrl).then(documentData => {\n      const documentEntries = documentData.entry || [];\n      if (documentEntries.length > 0) {\n        documentEntries.forEach((entry, index) => {\n          var _resource$type;\n          const resource = entry.resource;\n          const documentReferenceId = resource.id;\n          const codingArray = (resource === null || resource === void 0 ? void 0 : (_resource$type = resource.type) === null || _resource$type === void 0 ? void 0 : _resource$type.coding) || [];\n          const documentDate = (resource === null || resource === void 0 ? void 0 : resource.date) || \"No date available\";\n\n          // Log extracted codes and their document reference ID\n          codingArray.forEach((coding, codeIdx) => {\n            log(`ICD-10 Code #${index + 1}-${codeIdx + 1}:`, \"Info\", {\n              documentReferenceId,\n              ...coding\n            });\n          });\n          setDocumentReference(prev => [...prev, {\n            id: documentReferenceId,\n            type: resource.type.text || \"Unknown\",\n            date: documentDate,\n            icd10Codes: codingArray.map(coding => ({\n              ...coding,\n              original: true\n            }))\n          }]);\n        });\n      } else {\n        log(\"No document references found.\", \"Warning\");\n      }\n    }).catch(error => {\n      log(`Error retrieving document reference: ${error.message}`, \"Error\", {\n        url: documentReferenceUrl,\n        error\n      });\n    });\n  };\n\n  // Handle temporary edit changes\n  const handleTempEditChange = (docIdx, codeIdx, field, value) => {\n    const tempKey = `${docIdx}-${codeIdx}`;\n    setTempEdits(prev => ({\n      ...prev,\n      [tempKey]: {\n        ...prev[tempKey],\n        [field]: value\n      }\n    }));\n  };\n\n  // Confirm the update and save it to the main state\n  const confirmCodeUpdate = (docIdx, codeIdx) => {\n    const tempKey = `${docIdx}-${codeIdx}`;\n    const updatedCode = tempEdits[tempKey];\n    if (updatedCode) {\n      setDocumentReference(prev => prev.map((doc, dIdx) => {\n        if (dIdx === docIdx) {\n          const updatedCodes = doc.icd10Codes.map((code, cIdx) => {\n            if (cIdx === codeIdx) {\n              return {\n                ...updatedCode,\n                original: false\n              };\n            }\n            return code;\n          });\n          return {\n            ...doc,\n            icd10Codes: updatedCodes\n          };\n        }\n        return doc;\n      }));\n\n      // Clear the temporary edit after confirming\n      setTempEdits(prev => {\n        const {\n          [tempKey]: _,\n          ...rest\n        } = prev; // Remove the confirmed edit\n        return rest;\n      });\n\n      // Log the update action\n      log(`ICD-10 Code updated for Document Reference ID: ${documentReference[docIdx].id}`, \"Success\", {\n        updatedCode\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Debug Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), logMessages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), patient ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Patient Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PatientVisualizer, {\n        patient: patient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Document References\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: fetchDocumentReference,\n        children: \"Retrieve Document References\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), documentReference.length > 0 ? documentReference.map((doc, docIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), \" \", doc.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this), \" \", doc.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), \" \", doc.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ICD-10 Codes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this), doc.icd10Codes.length > 0 ? doc.icd10Codes.map((code, codeIdx) => {\n          const tempKey = `${docIdx}-${codeIdx}`;\n          const tempValues = tempEdits[tempKey] || code;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"System\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: tempValues.system,\n                onChange: e => handleTempEditChange(docIdx, codeIdx, \"system\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: tempValues.code,\n                onChange: e => handleTempEditChange(docIdx, codeIdx, \"code\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Display\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: tempValues.display,\n                onChange: e => handleTempEditChange(docIdx, codeIdx, \"display\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              size: \"sm\",\n              style: {\n                marginTop: \"10px\"\n              },\n              onClick: () => confirmCodeUpdate(docIdx, codeIdx),\n              children: \"Confirm Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 23\n            }, this), !code.original && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: \"10px\"\n              },\n              children: \"Updated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 25\n            }, this)]\n          }, codeIdx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 21\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No ICD-10 codes available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this)]\n      }, docIdx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No document references available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oTV+ZW8vUeL9vyMTad8S/3RgLqk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","PatientVisualizer","Spinner","Container","Button","Form","jsxDEV","_jsxDEV","App","client","_s","patient","setPatient","logMessages","setLogMessages","documentReference","setDocumentReference","tempEdits","setTempEdits","log","message","category","details","timestamp","Date","toISOString","fullMessage","formattedDetails","JSON","stringify","console","prev","read","then","data","_data$name","_data$name$","_data$name$$given","_data$name2","_data$name2$","patientId","id","patientName","name","given","join","family","catch","error","fetchDocumentReference","documentReferenceUrl","url","request","documentData","documentEntries","entry","length","forEach","index","_resource$type","resource","documentReferenceId","codingArray","type","coding","documentDate","date","codeIdx","text","icd10Codes","map","original","handleTempEditChange","docIdx","field","value","tempKey","confirmCodeUpdate","updatedCode","doc","dIdx","updatedCodes","code","cIdx","_","rest","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","idx","animation","onClick","tempValues","style","marginBottom","Group","Label","Control","system","onChange","e","target","display","variant","size","marginTop","marginLeft","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport \"./App.css\";\r\nimport { PatientVisualizer } from \"fhir-visualizers\";\r\nimport { Spinner, Container, Button, Form } from \"react-bootstrap\";\r\n\r\n//This app attempts to get all ICD information of patients along with inforamtion written about them and update the ICD codes.\r\n\r\nexport default function App({ client }) {\r\n  const [patient, setPatient] = useState(null);\r\n  const [logMessages, setLogMessages] = useState([]);\r\n  const [documentReference, setDocumentReference] = useState([]);\r\n  const [tempEdits, setTempEdits] = useState({}); // Temporary state for edits\r\n\r\n  // Enhanced log function\r\n  const log = useCallback((message, category = \"Info\", details = {}) => {\r\n    const timestamp = new Date().toISOString();\r\n    const fullMessage = `[${timestamp}] [${category}] ${message}`;\r\n    const formattedDetails =\r\n      typeof details === \"object\" ? JSON.stringify(details, null, 2) : details;\r\n\r\n    console.log(fullMessage, formattedDetails);\r\n    setLogMessages((prev) => [\r\n      ...prev,\r\n      `${fullMessage} ${formattedDetails || \"\"}`,\r\n    ]);\r\n  }, []);\r\n\r\n  // Fetch patient data on component mount\r\n  useEffect(() => {\r\n    if (!client) {\r\n      log(\"FHIR client is not initialized.\", \"Error\");\r\n      return;\r\n    }\r\n\r\n    client.patient\r\n      .read()\r\n      .then((data) => {\r\n        log(\"Patient data retrieved successfully.\", \"Success\", {\r\n          patientId: data.id,\r\n          patientName: `${data.name?.[0]?.given?.join(\" \")} ${\r\n            data.name?.[0]?.family\r\n          }`,\r\n        });\r\n        setPatient(data);\r\n      })\r\n      .catch((error) => {\r\n        log(`Error fetching patient: ${error.message}`, \"Error\", { error });\r\n      });\r\n  }, [client, log]);\r\n\r\n  // Fetch DocumentReference and log full data including ICD-10 codes\r\n  const fetchDocumentReference = () => {\r\n    if (!patient) {\r\n      log(\"Patient not available for document reference retrieval.\", \"Warning\");\r\n      return;\r\n    }\r\n\r\n    const documentReferenceUrl = `DocumentReference?patient=${patient.id}`;\r\n    log(\"Fetching document reference from FHIR server.\", \"Info\", {\r\n      url: documentReferenceUrl,\r\n    });\r\n\r\n    client\r\n      .request(documentReferenceUrl)\r\n      .then((documentData) => {\r\n        const documentEntries = documentData.entry || [];\r\n        if (documentEntries.length > 0) {\r\n          documentEntries.forEach((entry, index) => {\r\n            const resource = entry.resource;\r\n            const documentReferenceId = resource.id;\r\n            const codingArray = resource?.type?.coding || [];\r\n            const documentDate = resource?.date || \"No date available\";\r\n\r\n            // Log extracted codes and their document reference ID\r\n            codingArray.forEach((coding, codeIdx) => {\r\n              log(`ICD-10 Code #${index + 1}-${codeIdx + 1}:`, \"Info\", {\r\n                documentReferenceId,\r\n                ...coding,\r\n              });\r\n            });\r\n\r\n            setDocumentReference((prev) => [\r\n              ...prev,\r\n              {\r\n                id: documentReferenceId,\r\n                type: resource.type.text || \"Unknown\",\r\n                date: documentDate,\r\n                icd10Codes: codingArray.map((coding) => ({\r\n                  ...coding,\r\n                  original: true,\r\n                })),\r\n              },\r\n            ]);\r\n          });\r\n        } else {\r\n          log(\"No document references found.\", \"Warning\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        log(`Error retrieving document reference: ${error.message}`, \"Error\", {\r\n          url: documentReferenceUrl,\r\n          error,\r\n        });\r\n      });\r\n  };\r\n\r\n  // Handle temporary edit changes\r\n  const handleTempEditChange = (docIdx, codeIdx, field, value) => {\r\n    const tempKey = `${docIdx}-${codeIdx}`;\r\n    setTempEdits((prev) => ({\r\n      ...prev,\r\n      [tempKey]: {\r\n        ...prev[tempKey],\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  // Confirm the update and save it to the main state\r\n  const confirmCodeUpdate = (docIdx, codeIdx) => {\r\n    const tempKey = `${docIdx}-${codeIdx}`;\r\n    const updatedCode = tempEdits[tempKey];\r\n\r\n    if (updatedCode) {\r\n      setDocumentReference((prev) =>\r\n        prev.map((doc, dIdx) => {\r\n          if (dIdx === docIdx) {\r\n            const updatedCodes = doc.icd10Codes.map((code, cIdx) => {\r\n              if (cIdx === codeIdx) {\r\n                return { ...updatedCode, original: false };\r\n              }\r\n              return code;\r\n            });\r\n            return { ...doc, icd10Codes: updatedCodes };\r\n          }\r\n          return doc;\r\n        })\r\n      );\r\n\r\n      // Clear the temporary edit after confirming\r\n      setTempEdits((prev) => {\r\n        const { [tempKey]: _, ...rest } = prev; // Remove the confirmed edit\r\n        return rest;\r\n      });\r\n\r\n      // Log the update action\r\n      log(\r\n        `ICD-10 Code updated for Document Reference ID: ${documentReference[docIdx].id}`,\r\n        \"Success\",\r\n        { updatedCode }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {/* Debug Log */}\r\n      <Container>\r\n        <h4>Debug Log</h4>\r\n        {logMessages.map((msg, idx) => (\r\n          <p key={idx}>{msg}</p>\r\n        ))}\r\n      </Container>\r\n\r\n      {/* Patient Information */}\r\n      {patient ? (\r\n        <div>\r\n          <h4>Patient Information</h4>\r\n          <PatientVisualizer patient={patient} />\r\n        </div>\r\n      ) : (\r\n        <Spinner animation=\"border\" />\r\n      )}\r\n\r\n      {/* Fetch Document Reference */}\r\n      <Container>\r\n        <h4>Document References</h4>\r\n        <Button onClick={fetchDocumentReference}>\r\n          Retrieve Document References\r\n        </Button>\r\n        {documentReference.length > 0 ? (\r\n          documentReference.map((doc, docIdx) => (\r\n            <div key={docIdx}>\r\n              <p>\r\n                <strong>ID:</strong> {doc.id}\r\n              </p>\r\n              <p>\r\n                <strong>Type:</strong> {doc.type}\r\n              </p>\r\n              <p>\r\n                <strong>Date:</strong> {doc.date}\r\n              </p>\r\n              <p>\r\n                <strong>ICD-10 Codes:</strong>\r\n              </p>\r\n              {doc.icd10Codes.length > 0 ? (\r\n                doc.icd10Codes.map((code, codeIdx) => {\r\n                  const tempKey = `${docIdx}-${codeIdx}`;\r\n                  const tempValues = tempEdits[tempKey] || code;\r\n\r\n                  return (\r\n                    <div key={codeIdx} style={{ marginBottom: \"10px\" }}>\r\n                      <Form.Group>\r\n                        <Form.Label>System</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          value={tempValues.system}\r\n                          onChange={(e) =>\r\n                            handleTempEditChange(\r\n                              docIdx,\r\n                              codeIdx,\r\n                              \"system\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                        />\r\n                      </Form.Group>\r\n\r\n                      <Form.Group>\r\n                        <Form.Label>Code</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          value={tempValues.code}\r\n                          onChange={(e) =>\r\n                            handleTempEditChange(\r\n                              docIdx,\r\n                              codeIdx,\r\n                              \"code\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                        />\r\n                      </Form.Group>\r\n\r\n                      <Form.Group>\r\n                        <Form.Label>Display</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          value={tempValues.display}\r\n                          onChange={(e) =>\r\n                            handleTempEditChange(\r\n                              docIdx,\r\n                              codeIdx,\r\n                              \"display\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                        />\r\n                      </Form.Group>\r\n\r\n                      <Button\r\n                        variant=\"success\"\r\n                        size=\"sm\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                        onClick={() => confirmCodeUpdate(docIdx, codeIdx)}\r\n                      >\r\n                        Confirm Update\r\n                      </Button>\r\n                      {!code.original && (\r\n                        <span style={{ marginLeft: \"10px\" }}>Updated</span>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <p>No ICD-10 codes available.</p>\r\n              )}\r\n              <hr />\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No document references available.</p>\r\n        )}\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}