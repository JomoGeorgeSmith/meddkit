{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/index.js\";\nimport React from \"react\"; // Import React\nimport ReactDOM from \"react-dom\"; // Import ReactDOM\nimport App from \"./App\"; // Import your main App component\nimport FHIR from \"fhirclient\"; // Import the FHIR client\nimport \"./index.css\"; // Import CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Import Bootstrap CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootElement = document.getElementById(\"root\");\nconst smartLaunch = () => {\n  const sandboxIss = \"https://fhir.epic.com/interconnect-fhir-oauth\"; // Epic Sandbox URL\n  const clientId = \"3e610e34-4728-487f-affc-2111b103b7d8\"; // Replace with your app's client ID\n\n  const urlParams = new URLSearchParams(window.location.search);\n  const iss = urlParams.get(\"iss\") || sandboxIss;\n  if (!iss) {\n    console.error(\"No FHIR server URL found. Please specify it as `iss`.\");\n    return;\n  }\n  FHIR.oauth2.init({\n    clientId: \"3e610e34-4728-487f-affc-2111b103b7d8\",\n    scope: \"launch/patient patient/*.read patient/*.write openid profile\",\n    redirectUri: \"http://localhost:3000\",\n    iss: iss // FHIR server URL\n  }).then(client => {\n    // Check if a patient context is available\n    const patientId = client.patient.id;\n    if (patientId) {\n      // Redirect directly to your Patient Details Page\n      window.location.href = `/patient/${patientId}`;\n    } else {\n      // Render the app normally if no patient is selected\n      ReactDOM.render(/*#__PURE__*/_jsxDEV(App, {\n        client: client\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }, this), document.getElementById(\"root\"));\n    }\n  }).catch(error => {\n    console.error(\"FHIR initialization failed:\", error);\n  });\n};\nsmartLaunch();","map":{"version":3,"names":["React","ReactDOM","App","FHIR","jsxDEV","_jsxDEV","rootElement","document","getElementById","smartLaunch","sandboxIss","clientId","urlParams","URLSearchParams","window","location","search","iss","get","console","error","oauth2","init","scope","redirectUri","then","client","patientId","patient","id","href","render","fileName","_jsxFileName","lineNumber","columnNumber","catch"],"sources":["/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/index.js"],"sourcesContent":["import React from \"react\"; // Import React\r\nimport ReactDOM from \"react-dom\"; // Import ReactDOM\r\nimport App from \"./App\"; // Import your main App component\r\nimport FHIR from \"fhirclient\"; // Import the FHIR client\r\nimport \"./index.css\"; // Import CSS\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Import Bootstrap CSS\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nconst smartLaunch = () => {\r\n  const sandboxIss = \"https://fhir.epic.com/interconnect-fhir-oauth\"; // Epic Sandbox URL\r\n  const clientId = \"3e610e34-4728-487f-affc-2111b103b7d8\"; // Replace with your app's client ID\r\n\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const iss = urlParams.get(\"iss\") || sandboxIss;\r\n\r\n  if (!iss) {\r\n    console.error(\"No FHIR server URL found. Please specify it as `iss`.\");\r\n    return;\r\n  }\r\n\r\n  FHIR.oauth2\r\n  .init({\r\n    clientId: \"3e610e34-4728-487f-affc-2111b103b7d8\",\r\n    scope: \"launch/patient patient/*.read patient/*.write openid profile\",\r\n    redirectUri: \"http://localhost:3000\",\r\n    iss: iss, // FHIR server URL\r\n  })\r\n  .then((client) => {\r\n    // Check if a patient context is available\r\n    const patientId = client.patient.id;\r\n\r\n    if (patientId) {\r\n      // Redirect directly to your Patient Details Page\r\n      window.location.href = `/patient/${patientId}`;\r\n    } else {\r\n      // Render the app normally if no patient is selected\r\n      ReactDOM.render(<App client={client} />, document.getElementById(\"root\"));\r\n    }\r\n  })\r\n  .catch((error) => {\r\n    console.error(\"FHIR initialization failed:\", error);\r\n  });\r\n\r\n};\r\n\r\nsmartLaunch();\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,QAAQ,MAAM,WAAW,CAAC,CAAC;AAClC,OAAOC,GAAG,MAAM,OAAO,CAAC,CAAC;AACzB,OAAOC,IAAI,MAAM,YAAY,CAAC,CAAC;AAC/B,OAAO,aAAa,CAAC,CAAC;AACtB,OAAO,sCAAsC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,UAAU,GAAG,+CAA+C,CAAC,CAAC;EACpE,MAAMC,QAAQ,GAAG,sCAAsC,CAAC,CAAC;;EAEzD,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;EAC7D,MAAMC,GAAG,GAAGL,SAAS,CAACM,GAAG,CAAC,KAAK,CAAC,IAAIR,UAAU;EAE9C,IAAI,CAACO,GAAG,EAAE;IACRE,OAAO,CAACC,KAAK,CAAC,uDAAuD,CAAC;IACtE;EACF;EAEAjB,IAAI,CAACkB,MAAM,CACVC,IAAI,CAAC;IACJX,QAAQ,EAAE,sCAAsC;IAChDY,KAAK,EAAE,8DAA8D;IACrEC,WAAW,EAAE,uBAAuB;IACpCP,GAAG,EAAEA,GAAG,CAAE;EACZ,CAAC,CAAC,CACDQ,IAAI,CAAEC,MAAM,IAAK;IAChB;IACA,MAAMC,SAAS,GAAGD,MAAM,CAACE,OAAO,CAACC,EAAE;IAEnC,IAAIF,SAAS,EAAE;MACb;MACAb,MAAM,CAACC,QAAQ,CAACe,IAAI,GAAG,YAAYH,SAAS,EAAE;IAChD,CAAC,MAAM;MACL;MACA1B,QAAQ,CAAC8B,MAAM,cAAC1B,OAAA,CAACH,GAAG;QAACwB,MAAM,EAAEA;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAAE5B,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC3E;EACF,CAAC,CAAC,CACD4B,KAAK,CAAEhB,KAAK,IAAK;IAChBD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD,CAAC,CAAC;AAEJ,CAAC;AAEDX,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}