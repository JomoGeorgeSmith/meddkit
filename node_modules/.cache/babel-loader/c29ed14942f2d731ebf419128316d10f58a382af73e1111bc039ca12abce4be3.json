{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/PatientDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PatientDetails({\n  client\n}) {\n  _s();\n  var _patient$name, _patient$name$, _patient$name$$given, _patient$name2, _patient$name2$, _patient$address, _patient$telecom, _patient$identifier;\n  const {\n    id\n  } = useParams();\n  const [patient, setPatient] = useState(null);\n\n  // Fetch patient data\n  useEffect(() => {\n    client.request(`Patient/${id}`).then(data => setPatient(data));\n  }, [client, id]);\n\n  // Handle input change\n  const handleEdit = (field, value) => {\n    setPatient(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Save changes\n  const saveChanges = () => {\n    client.update(patient).then(() => {\n      alert(\"Patient details updated successfully!\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-details\",\n    children: patient ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [(_patient$name = patient.name) === null || _patient$name === void 0 ? void 0 : (_patient$name$ = _patient$name[0]) === null || _patient$name$ === void 0 ? void 0 : (_patient$name$$given = _patient$name$.given) === null || _patient$name$$given === void 0 ? void 0 : _patient$name$$given.join(\" \"), \" \", (_patient$name2 = patient.name) === null || _patient$name2 === void 0 ? void 0 : (_patient$name2$ = _patient$name2[0]) === null || _patient$name2$ === void 0 ? void 0 : _patient$name2$.family]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Gender:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: patient.gender || \"\",\n          onChange: e => handleEdit(\"gender\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Birthdate:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: patient.birthDate || \"\",\n          onChange: e => handleEdit(\"birthDate\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), (_patient$address = patient.address) === null || _patient$address === void 0 ? void 0 : _patient$address.map((address, index) => {\n        var _address$line;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Address \", index + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: ((_address$line = address.line) === null || _address$line === void 0 ? void 0 : _address$line[0]) || \"\",\n            onChange: e => {\n              const updatedAddress = [...(patient.address || [])];\n              updatedAddress[index] = {\n                ...address,\n                line: [e.target.value]\n              };\n              handleEdit(\"address\", updatedAddress);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      }), (_patient$telecom = patient.telecom) === null || _patient$telecom === void 0 ? void 0 : _patient$telecom.map((telecom, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [telecom.system === \"phone\" ? \"Phone\" : \"Email\", \" \", index + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: telecom.value || \"\",\n          onChange: e => {\n            const updatedTelecom = [...(patient.telecom || [])];\n            updatedTelecom[index] = {\n              ...telecom,\n              value: e.target.value\n            };\n            handleEdit(\"telecom\", updatedTelecom);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)), (_patient$identifier = patient.identifier) === null || _patient$identifier === void 0 ? void 0 : _patient$identifier.map((identifier, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Identifier \", index + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: identifier.value || \"\",\n          onChange: e => {\n            const updatedIdentifiers = [...(patient.identifier || [])];\n            updatedIdentifiers[index] = {\n              ...identifier,\n              value: e.target.value\n            };\n            handleEdit(\"identifier\", updatedIdentifiers);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveChanges,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading patient data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientDetails, \"StEQIjQElYROw+ZrPS+CuyImxq8=\", false, function () {\n  return [useParams];\n});\n_c = PatientDetails;\nvar _c;\n$RefreshReg$(_c, \"PatientDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","PatientDetails","client","_s","_patient$name","_patient$name$","_patient$name$$given","_patient$name2","_patient$name2$","_patient$address","_patient$telecom","_patient$identifier","id","patient","setPatient","request","then","data","handleEdit","field","value","prev","saveChanges","update","alert","className","children","name","given","join","family","fileName","_jsxFileName","lineNumber","columnNumber","type","gender","onChange","e","target","birthDate","address","map","index","_address$line","line","updatedAddress","telecom","system","updatedTelecom","identifier","updatedIdentifiers","onClick","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/PatientDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function PatientDetails({ client }) {\n  const { id } = useParams();\n  const [patient, setPatient] = useState(null);\n\n  // Fetch patient data\n  useEffect(() => {\n    client.request(`Patient/${id}`).then((data) => setPatient(data));\n  }, [client, id]);\n\n  // Handle input change\n  const handleEdit = (field, value) => {\n    setPatient((prev) => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  // Save changes\n  const saveChanges = () => {\n    client.update(patient).then(() => {\n      alert(\"Patient details updated successfully!\");\n    });\n  };\n\n  return (\n    <div className=\"patient-details\">\n      {patient ? (\n        <>\n          <h1>\n            {patient.name?.[0]?.given?.join(\" \")} {patient.name?.[0]?.family}\n          </h1>\n\n          {/* Gender */}\n          <div>\n            <label>Gender:</label>\n            <input\n              type=\"text\"\n              value={patient.gender || \"\"}\n              onChange={(e) => handleEdit(\"gender\", e.target.value)}\n            />\n          </div>\n\n          {/* Birthdate */}\n          <div>\n            <label>Birthdate:</label>\n            <input\n              type=\"date\"\n              value={patient.birthDate || \"\"}\n              onChange={(e) => handleEdit(\"birthDate\", e.target.value)}\n            />\n          </div>\n\n          {/* Address */}\n          {patient.address?.map((address, index) => (\n            <div key={index}>\n              <label>Address {index + 1}:</label>\n              <input\n                type=\"text\"\n                value={address.line?.[0] || \"\"}\n                onChange={(e) => {\n                  const updatedAddress = [...(patient.address || [])];\n                  updatedAddress[index] = {\n                    ...address,\n                    line: [e.target.value],\n                  };\n                  handleEdit(\"address\", updatedAddress);\n                }}\n              />\n            </div>\n          ))}\n\n          {/* Telecom (Phone/Email) */}\n          {patient.telecom?.map((telecom, index) => (\n            <div key={index}>\n              <label>\n                {telecom.system === \"phone\" ? \"Phone\" : \"Email\"} {index + 1}:\n              </label>\n              <input\n                type=\"text\"\n                value={telecom.value || \"\"}\n                onChange={(e) => {\n                  const updatedTelecom = [...(patient.telecom || [])];\n                  updatedTelecom[index] = {\n                    ...telecom,\n                    value: e.target.value,\n                  };\n                  handleEdit(\"telecom\", updatedTelecom);\n                }}\n              />\n            </div>\n          ))}\n\n          {/* Identifiers */}\n          {patient.identifier?.map((identifier, index) => (\n            <div key={index}>\n              <label>Identifier {index + 1}:</label>\n              <input\n                type=\"text\"\n                value={identifier.value || \"\"}\n                onChange={(e) => {\n                  const updatedIdentifiers = [...(patient.identifier || [])];\n                  updatedIdentifiers[index] = {\n                    ...identifier,\n                    value: e.target.value,\n                  };\n                  handleEdit(\"identifier\", updatedIdentifiers);\n                }}\n              />\n            </div>\n          ))}\n\n          <button onClick={saveChanges}>Save Changes</button>\n        </>\n      ) : (\n        <p>Loading patient data...</p>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}