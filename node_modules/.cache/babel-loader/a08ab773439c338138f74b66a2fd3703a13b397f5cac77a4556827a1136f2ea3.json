{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/PatientDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, Container, Table, Form } from \"react-bootstrap\";\nimport \"./PatientDetails.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PatientDetails({\n  client\n}) {\n  _s();\n  var _patient$name, _patient$name$, _patient$name$$given, _patient$name2, _patient$name2$;\n  const {\n    id\n  } = useParams();\n  const [patient, setPatient] = useState(null);\n  const [encounters, setEncounters] = useState([]);\n  const [notes, setNotes] = useState([]);\n  const [conditions, setConditions] = useState([]);\n  const [newRows, setNewRows] = useState([]);\n  useEffect(() => {\n    client.request(`Patient/${id}`).then(data => setPatient(data));\n    client.request(`Encounter?patient=${id}`).then(data => {\n      var _data$entry;\n      setEncounters(((_data$entry = data.entry) === null || _data$entry === void 0 ? void 0 : _data$entry.map(entry => entry.resource)) || []);\n    });\n    client.request(`Observation?patient=${id}`).then(data => {\n      var _data$entry2;\n      setNotes(((_data$entry2 = data.entry) === null || _data$entry2 === void 0 ? void 0 : _data$entry2.map(entry => entry.resource)) || []);\n    });\n    client.request(`Condition?patient=${id}`).then(data => {\n      var _data$entry3;\n      setConditions(((_data$entry3 = data.entry) === null || _data$entry3 === void 0 ? void 0 : _data$entry3.map(entry => entry.resource)) || []);\n    });\n  }, [client, id]);\n  const formatDate = date => {\n    if (!date) return \"N/A\";\n    return new Intl.DateTimeFormat(\"en-US\", {\n      dateStyle: \"long\"\n    }).format(new Date(date));\n  };\n  const visitData = [...encounters.map(encounter => {\n    var _encounter$period, _visitNotes$, _visitNotes$2, _visitNotes$2$valueCo, _visitConditions$, _visitConditions$$cod, _visitConditions$$cod2, _visitConditions$$cod3, _visitConditions$2, _visitConditions$2$co, _visitConditions$2$co2, _visitConditions$2$co3;\n    const encounterId = encounter.id;\n    const visitNotes = notes.filter(note => {\n      var _note$encounter;\n      return ((_note$encounter = note.encounter) === null || _note$encounter === void 0 ? void 0 : _note$encounter.reference) === `Encounter/${encounterId}`;\n    });\n    const visitConditions = conditions.filter(condition => {\n      var _condition$encounter;\n      return ((_condition$encounter = condition.encounter) === null || _condition$encounter === void 0 ? void 0 : _condition$encounter.reference) === `Encounter/${encounterId}`;\n    });\n    return {\n      id: encounterId,\n      date: ((_encounter$period = encounter.period) === null || _encounter$period === void 0 ? void 0 : _encounter$period.start) || \"\",\n      note: ((_visitNotes$ = visitNotes[0]) === null || _visitNotes$ === void 0 ? void 0 : _visitNotes$.valueString) || ((_visitNotes$2 = visitNotes[0]) === null || _visitNotes$2 === void 0 ? void 0 : (_visitNotes$2$valueCo = _visitNotes$2.valueCodeableConcept) === null || _visitNotes$2$valueCo === void 0 ? void 0 : _visitNotes$2$valueCo.text) || \"\",\n      icdCode: ((_visitConditions$ = visitConditions[0]) === null || _visitConditions$ === void 0 ? void 0 : (_visitConditions$$cod = _visitConditions$.code) === null || _visitConditions$$cod === void 0 ? void 0 : (_visitConditions$$cod2 = _visitConditions$$cod.coding) === null || _visitConditions$$cod2 === void 0 ? void 0 : (_visitConditions$$cod3 = _visitConditions$$cod2[0]) === null || _visitConditions$$cod3 === void 0 ? void 0 : _visitConditions$$cod3.code) || \"\",\n      condition: ((_visitConditions$2 = visitConditions[0]) === null || _visitConditions$2 === void 0 ? void 0 : (_visitConditions$2$co = _visitConditions$2.code) === null || _visitConditions$2$co === void 0 ? void 0 : (_visitConditions$2$co2 = _visitConditions$2$co.coding) === null || _visitConditions$2$co2 === void 0 ? void 0 : (_visitConditions$2$co3 = _visitConditions$2$co2[0]) === null || _visitConditions$2$co3 === void 0 ? void 0 : _visitConditions$2$co3.display) || \"\"\n    };\n  }), ...newRows];\n  const handleEdit = (rowId, field, value) => {\n    if (rowId.startsWith(\"new-\")) {\n      // Updates new rows\n      setNewRows(prev => prev.map(row => row.id === rowId ? {\n        ...row,\n        [field]: value\n      } : row));\n    } else {\n      // Updates existing rows\n      setEncounters(prev => prev.map(encounter => encounter.id === rowId ? {\n        ...encounter,\n        [field]: value\n      } : encounter));\n    }\n  };\n  const handleAIGenerateICD = rowId => {\n    alert(`AI generation triggered for row ID: ${rowId}`);\n    // Add your logic here to trigger the AI for ICD generation.\n  };\n  const addRow = () => {\n    const newRow = {\n      id: `new-${Date.now()}`,\n      date: new Date().toISOString(),\n      note: \"\",\n      condition: \"\",\n      icdCode: \"\"\n    };\n    setNewRows(prev => [...prev, newRow]);\n  };\n  const saveChanges = async () => {\n    try {\n      var _updatedEncounters$en, _updatedNotes$entry, _updatedConditions$en;\n      // Save existing notes and conditions\n      const conditionPromises = conditions.map(condition => client.update(condition).catch(error => {\n        console.error(\"Error updating condition:\", condition, error);\n      }));\n      const notePromises = notes.map(note => client.update(note).catch(error => {\n        console.error(\"Error updating note:\", note, error);\n      }));\n\n      // Save new rows as FHIR resources\n      for (const row of newRows) {\n        if (!row.date || !row.note || !row.condition || !row.icdCode) {\n          console.warn(\"Skipping incomplete row:\", row);\n          continue;\n        }\n        const encounter = {\n          resourceType: \"Encounter\",\n          subject: {\n            reference: `Patient/${id}`\n          },\n          period: {\n            start: row.date\n          }\n        };\n        const newEncounter = await client.create(encounter);\n        const condition = {\n          resourceType: \"Condition\",\n          subject: {\n            reference: `Patient/${id}`\n          },\n          encounter: {\n            reference: `Encounter/${newEncounter.id}`\n          },\n          code: {\n            coding: [{\n              code: row.icdCode,\n              display: row.condition\n            }]\n          }\n        };\n        await client.create(condition);\n        const note = {\n          resourceType: \"Observation\",\n          status: \"final\",\n          category: [{\n            coding: [{\n              system: \"http://terminology.hl7.org/CodeSystem/observation-category\",\n              code: \"clinical\",\n              display: \"Clinical\"\n            }]\n          }],\n          code: {\n            coding: [{\n              system: \"http://loinc.org\",\n              code: \"34133-9\",\n              display: \"History and physical note\"\n            }]\n          },\n          subject: {\n            reference: `Patient/${id}`\n          },\n          encounter: {\n            reference: `Encounter/${newEncounter.id}`\n          },\n          effectiveDateTime: row.date,\n          valueString: row.note\n        };\n        await client.create(note);\n      }\n      await Promise.all([...conditionPromises, ...notePromises]);\n      alert(\"Changes saved successfully!\");\n      setNewRows([]);\n\n      // Refresh data\n      const updatedEncounters = await client.request(`Encounter?patient=${id}`);\n      setEncounters(((_updatedEncounters$en = updatedEncounters.entry) === null || _updatedEncounters$en === void 0 ? void 0 : _updatedEncounters$en.map(entry => entry.resource)) || []);\n      const updatedNotes = await client.request(`DocumentReference?patient=${id}`);\n      setNotes(((_updatedNotes$entry = updatedNotes.entry) === null || _updatedNotes$entry === void 0 ? void 0 : _updatedNotes$entry.map(entry => entry.resource)) || []);\n      const updatedConditions = await client.request(`Condition?patient=${id}`);\n      setConditions(((_updatedConditions$en = updatedConditions.entry) === null || _updatedConditions$en === void 0 ? void 0 : _updatedConditions$en.map(entry => entry.resource)) || []);\n    } catch (error) {\n      console.error(\"Error saving changes:\", error);\n      alert(\"Error saving changes.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"patient-details-container\",\n    children: patient ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"modern-title\",\n        children: \"Patient Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-card mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-card-header\",\n          children: \"Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Full Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this), \" \", `${(_patient$name = patient.name) === null || _patient$name === void 0 ? void 0 : (_patient$name$ = _patient$name[0]) === null || _patient$name$ === void 0 ? void 0 : (_patient$name$$given = _patient$name$.given) === null || _patient$name$$given === void 0 ? void 0 : _patient$name$$given.join(\" \")} ${(_patient$name2 = patient.name) === null || _patient$name2 === void 0 ? void 0 : (_patient$name2$ = _patient$name2[0]) === null || _patient$name2$ === void 0 ? void 0 : _patient$name2$.family}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Gender:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this), \" \", patient.gender || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Birthdate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this), \" \", formatDate(patient.birthDate)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-card mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-card-header\",\n          children: \"Visit Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            className: \"modern-table\",\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date of Visit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Note\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Condition\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"ICD Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: visitData.filter(visit => visit.id.startsWith(\"new-\") ||\n              // Include all new rows\n              visit.note || visit.condition || visit.icdCode // Keep rows with at least one field filled\n              ).map(visit => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatDate(visit.date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 2,\n                    className: \"modern-input\",\n                    value: visit.note || \"\",\n                    onChange: e => handleEdit(visit.id, \"note\", e.target.value || \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    className: \"modern-input\",\n                    value: visit.condition || \"\",\n                    onChange: e => handleEdit(visit.id, \"condition\", e.target.value || \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      alignItems: \"center\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      className: \"modern-input\",\n                      value: visit.icdCode || \"\",\n                      onChange: e => handleEdit(visit.id, \"icdCode\", e.target.value || \"\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"icd-icon-container\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"icd-icon\",\n                        onClick: () => handleAIGenerateICD(visit.id),\n                        style: {\n                          cursor: \"pointer\",\n                          marginLeft: \"10px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fas fa-brain\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 284,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"tooltip-text\",\n                        children: \"Click to have AI generate the ICD for you\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 286,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 49\n                }, this)]\n              }, visit.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            className: \"modern-button mt-3\",\n            onClick: addRow,\n            children: \"Add Row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"modern-button\",\n          onClick: saveChanges,\n          children: \"Save All Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading patient data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientDetails, \"P2MZJ5DUOsbHpSGny0203SbQuO0=\", false, function () {\n  return [useParams];\n});\n_c = PatientDetails;\nvar _c;\n$RefreshReg$(_c, \"PatientDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Button","Container","Table","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","PatientDetails","client","_s","_patient$name","_patient$name$","_patient$name$$given","_patient$name2","_patient$name2$","id","patient","setPatient","encounters","setEncounters","notes","setNotes","conditions","setConditions","newRows","setNewRows","request","then","data","_data$entry","entry","map","resource","_data$entry2","_data$entry3","formatDate","date","Intl","DateTimeFormat","dateStyle","format","Date","visitData","encounter","_encounter$period","_visitNotes$","_visitNotes$2","_visitNotes$2$valueCo","_visitConditions$","_visitConditions$$cod","_visitConditions$$cod2","_visitConditions$$cod3","_visitConditions$2","_visitConditions$2$co","_visitConditions$2$co2","_visitConditions$2$co3","encounterId","visitNotes","filter","note","_note$encounter","reference","visitConditions","condition","_condition$encounter","period","start","valueString","valueCodeableConcept","text","icdCode","code","coding","display","handleEdit","rowId","field","value","startsWith","prev","row","handleAIGenerateICD","alert","addRow","newRow","now","toISOString","saveChanges","_updatedEncounters$en","_updatedNotes$entry","_updatedConditions$en","conditionPromises","update","catch","error","console","notePromises","warn","resourceType","subject","newEncounter","create","status","category","system","effectiveDateTime","Promise","all","updatedEncounters","updatedNotes","updatedConditions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","given","join","family","gender","birthDate","responsive","visit","Control","as","rows","onChange","e","target","type","style","alignItems","onClick","cursor","marginLeft","variant","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/PatientDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, Container, Table, Form } from \"react-bootstrap\";\nimport \"./PatientDetails.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n\nexport default function PatientDetails({ client }) {\n    const { id } = useParams();\n    const [patient, setPatient] = useState(null);\n    const [encounters, setEncounters] = useState([]);\n    const [notes, setNotes] = useState([]);\n    const [conditions, setConditions] = useState([]);\n    const [newRows, setNewRows] = useState([]);\n\n    useEffect(() => {\n        client.request(`Patient/${id}`).then((data) => setPatient(data));\n        client.request(`Encounter?patient=${id}`).then((data) => {\n            setEncounters(data.entry?.map((entry) => entry.resource) || []);\n        });\n        client.request(`Observation?patient=${id}`).then((data) => {\n            setNotes(data.entry?.map((entry) => entry.resource) || []);\n        });\n        client.request(`Condition?patient=${id}`).then((data) => {\n            setConditions(data.entry?.map((entry) => entry.resource) || []);\n        });\n    }, [client, id]);\n    \n\n    const formatDate = (date) => {\n        if (!date) return \"N/A\";\n        return new Intl.DateTimeFormat(\"en-US\", { dateStyle: \"long\" }).format(\n            new Date(date)\n        );\n    };\n\n    const visitData = [\n        ...encounters.map((encounter) => {\n            const encounterId = encounter.id;\n            const visitNotes = notes.filter(\n                (note) => note.encounter?.reference === `Encounter/${encounterId}`\n            );\n            \n            const visitConditions = conditions.filter(\n                (condition) => condition.encounter?.reference === `Encounter/${encounterId}`\n            );\n    \n            return {\n                id: encounterId,\n                date: encounter.period?.start || \"\",\n                note: visitNotes[0]?.valueString || visitNotes[0]?.valueCodeableConcept?.text || \"\",\n                icdCode: visitConditions[0]?.code?.coding?.[0]?.code || \"\",\n                condition: visitConditions[0]?.code?.coding?.[0]?.display || \"\",\n            };\n        }),\n        ...newRows,\n    ];\n    \n\n    const handleEdit = (rowId, field, value) => {\n        if (rowId.startsWith(\"new-\")) {\n            // Updates new rows\n            setNewRows((prev) =>\n                prev.map((row) =>\n                    row.id === rowId\n                        ? {\n                            ...row,\n                            [field]: value,\n                        }\n                        : row\n                )\n            );\n        } else {\n            // Updates existing rows\n            setEncounters((prev) =>\n                prev.map((encounter) =>\n                    encounter.id === rowId\n                        ? {\n                            ...encounter,\n                            [field]: value,\n                        }\n                        : encounter\n                )\n            );\n        }\n    };\n\n    const handleAIGenerateICD = (rowId) => {\n        alert(`AI generation triggered for row ID: ${rowId}`);\n        // Add your logic here to trigger the AI for ICD generation.\n    };\n\n\n    const addRow = () => {\n        const newRow = {\n            id: `new-${Date.now()}`,\n            date: new Date().toISOString(),\n            note: \"\",\n            condition: \"\",\n            icdCode: \"\",\n        };\n        setNewRows((prev) => [...prev, newRow]);\n    };\n\n    const saveChanges = async () => {\n        try {\n            // Save existing notes and conditions\n            const conditionPromises = conditions.map((condition) =>\n                client.update(condition).catch((error) => {\n                    console.error(\"Error updating condition:\", condition, error);\n                })\n            );\n\n            const notePromises = notes.map((note) =>\n                client.update(note).catch((error) => {\n                    console.error(\"Error updating note:\", note, error);\n                })\n            );\n\n            // Save new rows as FHIR resources\n            for (const row of newRows) {\n                if (!row.date || !row.note || !row.condition || !row.icdCode) {\n                    console.warn(\"Skipping incomplete row:\", row);\n                    continue;\n                }\n\n                const encounter = {\n                    resourceType: \"Encounter\",\n                    subject: { reference: `Patient/${id}` },\n                    period: { start: row.date },\n                };\n                const newEncounter = await client.create(encounter);\n\n                const condition = {\n                    resourceType: \"Condition\",\n                    subject: { reference: `Patient/${id}` },\n                    encounter: { reference: `Encounter/${newEncounter.id}` },\n                    code: {\n                        coding: [\n                            {\n                                code: row.icdCode,\n                                display: row.condition,\n                            },\n                        ],\n                    },\n                };\n                await client.create(condition);\n\n                const note = {\n                    resourceType: \"Observation\",\n                    status: \"final\",\n                    category: [\n                        {\n                            coding: [\n                                {\n                                    system: \"http://terminology.hl7.org/CodeSystem/observation-category\",\n                                    code: \"clinical\",\n                                    display: \"Clinical\",\n                                },\n                            ],\n                        },\n                    ],\n                    code: {\n                        coding: [\n                            {\n                                system: \"http://loinc.org\",\n                                code: \"34133-9\",\n                                display: \"History and physical note\",\n                            },\n                        ],\n                    },\n                    subject: { reference: `Patient/${id}` },\n                    encounter: { reference: `Encounter/${newEncounter.id}` },\n                    effectiveDateTime: row.date,\n                    valueString: row.note,\n                };\n                await client.create(note);\n                \n                \n            }\n\n            await Promise.all([...conditionPromises, ...notePromises]);\n\n            alert(\"Changes saved successfully!\");\n            setNewRows([]);\n\n            // Refresh data\n            const updatedEncounters = await client.request(`Encounter?patient=${id}`);\n            setEncounters(updatedEncounters.entry?.map((entry) => entry.resource) || []);\n\n            const updatedNotes = await client.request(`DocumentReference?patient=${id}`);\n            setNotes(updatedNotes.entry?.map((entry) => entry.resource) || []);\n\n            const updatedConditions = await client.request(`Condition?patient=${id}`);\n            setConditions(updatedConditions.entry?.map((entry) => entry.resource) || []);\n        } catch (error) {\n            console.error(\"Error saving changes:\", error);\n            alert(\"Error saving changes.\");\n        }\n    };\n\n    return (\n        <Container className=\"patient-details-container\">\n            {patient ? (\n                <>\n                    <h1 className=\"modern-title\">Patient Details</h1>\n\n                    {/* Patient Basic Information */}\n                    <div className=\"custom-card mb-4\">\n                        <div className=\"custom-card-header\">Basic Information</div>\n                        <div className=\"custom-card-body\">\n                            <p>\n                                <strong>Full Name:</strong>{\" \"}\n                                {`${patient.name?.[0]?.given?.join(\" \")} ${patient.name?.[0]?.family}`}\n                            </p>\n                            <p>\n                                <strong>Gender:</strong> {patient.gender || \"N/A\"}\n                            </p>\n                            <p>\n                                <strong>Birthdate:</strong> {formatDate(patient.birthDate)}\n                            </p>\n                        </div>\n                    </div>\n\n                    {/* Visit Details */}\n                    <div className=\"custom-card mb-4\">\n                        <div className=\"custom-card-header\">Visit Details</div>\n                        <div className=\"custom-card-body\">\n                            <Table className=\"modern-table\" responsive>\n                                <thead>\n                                    <tr>\n                                        <th>Date of Visit</th>\n                                        <th>Note</th>\n                                        <th>Condition</th>\n                                        <th>ICD Code</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {visitData\n                                        .filter((visit) =>\n                                            visit.id.startsWith(\"new-\") || // Include all new rows\n                                            visit.note || visit.condition || visit.icdCode // Keep rows with at least one field filled\n                                        )\n                                        .map((visit) => (\n                                            <tr key={visit.id}>\n                                                <td>{formatDate(visit.date)}</td>\n                                                <td>\n                                                    <Form.Control\n                                                        as=\"textarea\"\n                                                        rows={2}\n                                                        className=\"modern-input\"\n                                                        value={visit.note || \"\"}\n                                                        onChange={(e) =>\n                                                            handleEdit(visit.id, \"note\", e.target.value || \"\")\n                                                        }\n                                                    />\n                                                </td>\n                                                <td>\n                                                    <Form.Control\n                                                        type=\"text\"\n                                                        className=\"modern-input\"\n                                                        value={visit.condition || \"\"}\n                                                        onChange={(e) =>\n                                                            handleEdit(visit.id, \"condition\", e.target.value || \"\")\n                                                        }\n                                                    />\n                                                </td>\n                                                <td>\n                                                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                                        <Form.Control\n                                                            type=\"text\"\n                                                            className=\"modern-input\"\n                                                            value={visit.icdCode || \"\"}\n                                                            onChange={(e) =>\n                                                                handleEdit(visit.id, \"icdCode\", e.target.value || \"\")\n                                                            }\n                                                        />\n                                                        <div className=\"icd-icon-container\">\n                                                            <div\n                                                                className=\"icd-icon\"\n                                                                onClick={() => handleAIGenerateICD(visit.id)}\n                                                                style={{ cursor: \"pointer\", marginLeft: \"10px\" }}\n                                                            >\n                                                                <i className=\"fas fa-brain\"></i>\n                                                            </div>\n                                                            <span className=\"tooltip-text\">Click to have AI generate the ICD for you</span>\n                                                        </div>\n                                                    </div>\n                                                </td>\n\n\n\n                                            </tr>\n                                        ))}\n                                </tbody>\n\n\n                            </Table>\n                            <Button variant=\"success\" className=\"modern-button mt-3\" onClick={addRow}>\n                                Add Row\n                            </Button>\n                        </div>\n                    </div>\n\n                    <div className=\"text-center\">\n                        <Button variant=\"primary\" className=\"modern-button\" onClick={saveChanges}>\n                            Save All Changes\n                        </Button>\n                    </div>\n                </>\n            ) : (\n                <p>Loading patient data...</p>\n            )}\n        </Container>\n    );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}