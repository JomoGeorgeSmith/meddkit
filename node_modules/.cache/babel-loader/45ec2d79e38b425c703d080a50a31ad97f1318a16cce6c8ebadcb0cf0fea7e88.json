{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/PatientDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Card, Button, Container, Table, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PatientDetails({\n  client\n}) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [patient, setPatient] = useState(null);\n  const [encounters, setEncounters] = useState([]);\n  const [notes, setNotes] = useState([]);\n  const [conditions, setConditions] = useState([]);\n  const [newRows, setNewRows] = useState([]); // Manage newly added rows\n\n  useEffect(() => {\n    client.request(`Patient/${id}`).then(data => setPatient(data));\n    client.request(`Encounter?patient=${id}`).then(data => {\n      var _data$entry;\n      setEncounters(((_data$entry = data.entry) === null || _data$entry === void 0 ? void 0 : _data$entry.map(entry => entry.resource)) || []);\n    });\n    client.request(`DocumentReference?patient=${id}`).then(data => {\n      var _data$entry2;\n      setNotes(((_data$entry2 = data.entry) === null || _data$entry2 === void 0 ? void 0 : _data$entry2.map(entry => entry.resource)) || []);\n    });\n    client.request(`Condition?patient=${id}`).then(data => {\n      var _data$entry3;\n      setConditions(((_data$entry3 = data.entry) === null || _data$entry3 === void 0 ? void 0 : _data$entry3.map(entry => entry.resource)) || []);\n    });\n  }, [client, id]);\n  const visitData = [...encounters.map(encounter => {\n    var _encounter$period, _visitNotes$, _visitNotes$$content, _visitNotes$$content$, _visitNotes$$content$2, _visitConditions$, _visitConditions$$cod, _visitConditions$$cod2, _visitConditions$$cod3, _visitConditions$2, _visitConditions$2$co, _visitConditions$2$co2, _visitConditions$2$co3;\n    const encounterId = encounter.id;\n    const visitNotes = notes.filter(note => {\n      var _note$context;\n      return ((_note$context = note.context) === null || _note$context === void 0 ? void 0 : _note$context.reference) === `Encounter/${encounterId}`;\n    });\n    const visitConditions = conditions.filter(condition => {\n      var _condition$encounter;\n      return ((_condition$encounter = condition.encounter) === null || _condition$encounter === void 0 ? void 0 : _condition$encounter.reference) === `Encounter/${encounterId}`;\n    });\n    return {\n      id: encounterId,\n      date: ((_encounter$period = encounter.period) === null || _encounter$period === void 0 ? void 0 : _encounter$period.start) || \"\",\n      note: ((_visitNotes$ = visitNotes[0]) === null || _visitNotes$ === void 0 ? void 0 : (_visitNotes$$content = _visitNotes$.content) === null || _visitNotes$$content === void 0 ? void 0 : (_visitNotes$$content$ = _visitNotes$$content[0]) === null || _visitNotes$$content$ === void 0 ? void 0 : (_visitNotes$$content$2 = _visitNotes$$content$.attachment) === null || _visitNotes$$content$2 === void 0 ? void 0 : _visitNotes$$content$2.data) || \"\",\n      icdCode: ((_visitConditions$ = visitConditions[0]) === null || _visitConditions$ === void 0 ? void 0 : (_visitConditions$$cod = _visitConditions$.code) === null || _visitConditions$$cod === void 0 ? void 0 : (_visitConditions$$cod2 = _visitConditions$$cod.coding) === null || _visitConditions$$cod2 === void 0 ? void 0 : (_visitConditions$$cod3 = _visitConditions$$cod2[0]) === null || _visitConditions$$cod3 === void 0 ? void 0 : _visitConditions$$cod3.code) || \"\",\n      condition: ((_visitConditions$2 = visitConditions[0]) === null || _visitConditions$2 === void 0 ? void 0 : (_visitConditions$2$co = _visitConditions$2.code) === null || _visitConditions$2$co === void 0 ? void 0 : (_visitConditions$2$co2 = _visitConditions$2$co.coding) === null || _visitConditions$2$co2 === void 0 ? void 0 : (_visitConditions$2$co3 = _visitConditions$2$co2[0]) === null || _visitConditions$2$co3 === void 0 ? void 0 : _visitConditions$2$co3.display) || \"\"\n    };\n  }), ...newRows];\n  const handleEdit = (rowId, field, value) => {\n    setNewRows(prev => prev.map(row => row.id === rowId ? {\n      ...row,\n      [field]: value\n    } : row));\n  };\n  const addRow = () => {\n    const newRow = {\n      id: `new-${Date.now()}`,\n      date: new Date().toISOString(),\n      note: \"\",\n      condition: \"\",\n      icdCode: \"\"\n    };\n    setNewRows(prev => [...prev, newRow]);\n  };\n  const saveChanges = async () => {\n    try {\n      // Save existing conditions and notes\n      const conditionPromises = conditions.map(condition => client.update(condition));\n      const notePromises = notes.map(note => client.update(note));\n\n      // Save new rows as FHIR resources\n      const newRowPromises = newRows.map(async row => {\n        // Create the Encounter\n        const encounter = {\n          resourceType: \"Encounter\",\n          subject: {\n            reference: `Patient/${id}`\n          },\n          period: {\n            start: row.date\n          }\n        };\n        const newEncounter = await client.create(encounter);\n\n        // Create the Condition\n        const condition = {\n          resourceType: \"Condition\",\n          subject: {\n            reference: `Patient/${id}`\n          },\n          encounter: {\n            reference: `Encounter/${newEncounter.id}`\n          },\n          code: {\n            coding: [{\n              code: row.icdCode,\n              display: row.condition\n            }]\n          }\n        };\n        await client.create(condition);\n\n        // Create the DocumentReference (Note)\n        const note = {\n          resourceType: \"DocumentReference\",\n          subject: {\n            reference: `Patient/${id}`\n          },\n          context: {\n            encounter: {\n              reference: `Encounter/${newEncounter.id}`\n            }\n          },\n          content: [{\n            attachment: {\n              contentType: \"text/plain\",\n              data: btoa(row.note) // Encode note in Base64\n            }\n          }]\n        };\n        await client.create(note);\n      });\n\n      // Wait for all saves to complete\n      await Promise.all([...conditionPromises, ...notePromises, ...newRowPromises]);\n      alert(\"Changes saved successfully!\");\n      setNewRows([]); // Clear new rows after saving\n\n      // Refresh data\n      client.request(`Encounter?patient=${id}`).then(data => {\n        var _data$entry4;\n        setEncounters(((_data$entry4 = data.entry) === null || _data$entry4 === void 0 ? void 0 : _data$entry4.map(entry => entry.resource)) || []);\n      });\n      client.request(`DocumentReference?patient=${id}`).then(data => {\n        var _data$entry5;\n        setNotes(((_data$entry5 = data.entry) === null || _data$entry5 === void 0 ? void 0 : _data$entry5.map(entry => entry.resource)) || []);\n      });\n      client.request(`Condition?patient=${id}`).then(data => {\n        var _data$entry6;\n        setConditions(((_data$entry6 = data.entry) === null || _data$entry6 === void 0 ? void 0 : _data$entry6.map(entry => entry.resource)) || []);\n      });\n    } catch (error) {\n      console.error(\"Error saving changes:\", error);\n      alert(\"Error saving changes.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: patient ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mt-4\",\n        children: \"Patient Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          as: \"h5\",\n          children: \"Visit Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date of Visit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Note\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Condition\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"ICD Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: visitData.map(visit => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    value: visit.date || \"\",\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 2,\n                    value: visit.note || \"\",\n                    onChange: e => handleEdit(visit.id, \"note\", e.target.value || \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    value: visit.condition || \"\",\n                    onChange: e => handleEdit(visit.id, \"condition\", e.target.value || \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    value: visit.icdCode || \"\",\n                    onChange: e => handleEdit(visit.id, \"icdCode\", e.target.value || \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 23\n                }, this)]\n              }, visit.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: addRow,\n            className: \"mt-3\",\n            children: \"Add Row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: saveChanges,\n          children: \"Save All Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading patient data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientDetails, \"P2MZJ5DUOsbHpSGny0203SbQuO0=\", false, function () {\n  return [useParams];\n});\n_c = PatientDetails;\nvar _c;\n$RefreshReg$(_c, \"PatientDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Card","Button","Container","Table","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","PatientDetails","client","_s","id","patient","setPatient","encounters","setEncounters","notes","setNotes","conditions","setConditions","newRows","setNewRows","request","then","data","_data$entry","entry","map","resource","_data$entry2","_data$entry3","visitData","encounter","_encounter$period","_visitNotes$","_visitNotes$$content","_visitNotes$$content$","_visitNotes$$content$2","_visitConditions$","_visitConditions$$cod","_visitConditions$$cod2","_visitConditions$$cod3","_visitConditions$2","_visitConditions$2$co","_visitConditions$2$co2","_visitConditions$2$co3","encounterId","visitNotes","filter","note","_note$context","context","reference","visitConditions","condition","_condition$encounter","date","period","start","content","attachment","icdCode","code","coding","display","handleEdit","rowId","field","value","prev","row","addRow","newRow","Date","now","toISOString","saveChanges","conditionPromises","update","notePromises","newRowPromises","resourceType","subject","newEncounter","create","contentType","btoa","Promise","all","alert","_data$entry4","_data$entry5","_data$entry6","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Header","as","Body","striped","bordered","hover","visit","Control","type","readOnly","rows","onChange","e","target","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/med/smart_on_fhire/smart-on-fhir-app-starter-kit/src/PatientDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Card, Button, Container, Table, Form } from \"react-bootstrap\";\n\nexport default function PatientDetails({ client }) {\n  const { id } = useParams();\n  const [patient, setPatient] = useState(null);\n  const [encounters, setEncounters] = useState([]);\n  const [notes, setNotes] = useState([]);\n  const [conditions, setConditions] = useState([]);\n  const [newRows, setNewRows] = useState([]); // Manage newly added rows\n\n  useEffect(() => {\n    client.request(`Patient/${id}`).then((data) => setPatient(data));\n    client.request(`Encounter?patient=${id}`).then((data) => {\n      setEncounters(data.entry?.map((entry) => entry.resource) || []);\n    });\n    client.request(`DocumentReference?patient=${id}`).then((data) => {\n      setNotes(data.entry?.map((entry) => entry.resource) || []);\n    });\n    client.request(`Condition?patient=${id}`).then((data) => {\n      setConditions(data.entry?.map((entry) => entry.resource) || []);\n    });\n  }, [client, id]);\n\n  const visitData = [\n    ...encounters.map((encounter) => {\n      const encounterId = encounter.id;\n      const visitNotes = notes.filter(\n        (note) => note.context?.reference === `Encounter/${encounterId}`\n      );\n      const visitConditions = conditions.filter(\n        (condition) => condition.encounter?.reference === `Encounter/${encounterId}`\n      );\n      return {\n        id: encounterId,\n        date: encounter.period?.start || \"\",\n        note: visitNotes[0]?.content?.[0]?.attachment?.data || \"\",\n        icdCode: visitConditions[0]?.code?.coding?.[0]?.code || \"\",\n        condition: visitConditions[0]?.code?.coding?.[0]?.display || \"\",\n      };\n    }),\n    ...newRows,\n  ];\n\n  const handleEdit = (rowId, field, value) => {\n    setNewRows((prev) =>\n      prev.map((row) =>\n        row.id === rowId\n          ? {\n              ...row,\n              [field]: value,\n            }\n          : row\n      )\n    );\n  };\n\n  const addRow = () => {\n    const newRow = {\n      id: `new-${Date.now()}`,\n      date: new Date().toISOString(),\n      note: \"\",\n      condition: \"\",\n      icdCode: \"\",\n    };\n    setNewRows((prev) => [...prev, newRow]);\n  };\n\n  const saveChanges = async () => {\n    try {\n      // Save existing conditions and notes\n      const conditionPromises = conditions.map((condition) =>\n        client.update(condition)\n      );\n      const notePromises = notes.map((note) => client.update(note));\n\n      // Save new rows as FHIR resources\n      const newRowPromises = newRows.map(async (row) => {\n        // Create the Encounter\n        const encounter = {\n          resourceType: \"Encounter\",\n          subject: { reference: `Patient/${id}` },\n          period: { start: row.date },\n        };\n        const newEncounter = await client.create(encounter);\n\n        // Create the Condition\n        const condition = {\n          resourceType: \"Condition\",\n          subject: { reference: `Patient/${id}` },\n          encounter: { reference: `Encounter/${newEncounter.id}` },\n          code: {\n            coding: [\n              {\n                code: row.icdCode,\n                display: row.condition,\n              },\n            ],\n          },\n        };\n        await client.create(condition);\n\n        // Create the DocumentReference (Note)\n        const note = {\n          resourceType: \"DocumentReference\",\n          subject: { reference: `Patient/${id}` },\n          context: { encounter: { reference: `Encounter/${newEncounter.id}` } },\n          content: [\n            {\n              attachment: {\n                contentType: \"text/plain\",\n                data: btoa(row.note), // Encode note in Base64\n              },\n            },\n          ],\n        };\n        await client.create(note);\n      });\n\n      // Wait for all saves to complete\n      await Promise.all([...conditionPromises, ...notePromises, ...newRowPromises]);\n\n      alert(\"Changes saved successfully!\");\n      setNewRows([]); // Clear new rows after saving\n\n      // Refresh data\n      client.request(`Encounter?patient=${id}`).then((data) => {\n        setEncounters(data.entry?.map((entry) => entry.resource) || []);\n      });\n      client.request(`DocumentReference?patient=${id}`).then((data) => {\n        setNotes(data.entry?.map((entry) => entry.resource) || []);\n      });\n      client.request(`Condition?patient=${id}`).then((data) => {\n        setConditions(data.entry?.map((entry) => entry.resource) || []);\n      });\n    } catch (error) {\n      console.error(\"Error saving changes:\", error);\n      alert(\"Error saving changes.\");\n    }\n  };\n\n  return (\n    <Container>\n      {patient ? (\n        <>\n          <h1 className=\"text-center mt-4\">Patient Details</h1>\n\n          <Card className=\"mb-4\">\n            <Card.Header as=\"h5\">Visit Details</Card.Header>\n            <Card.Body>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Date of Visit</th>\n                    <th>Note</th>\n                    <th>Condition</th>\n                    <th>ICD Code</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {visitData.map((visit) => (\n                    <tr key={visit.id}>\n                      <td>\n                        <Form.Control\n                          type=\"text\"\n                          value={visit.date || \"\"}\n                          readOnly\n                        />\n                      </td>\n                      <td>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows={2}\n                          value={visit.note || \"\"}\n                          onChange={(e) =>\n                            handleEdit(visit.id, \"note\", e.target.value || \"\")\n                          }\n                        />\n                      </td>\n                      <td>\n                        <Form.Control\n                          type=\"text\"\n                          value={visit.condition || \"\"}\n                          onChange={(e) =>\n                            handleEdit(visit.id, \"condition\", e.target.value || \"\")\n                          }\n                        />\n                      </td>\n                      <td>\n                        <Form.Control\n                          type=\"text\"\n                          value={visit.icdCode || \"\"}\n                          onChange={(e) =>\n                            handleEdit(visit.id, \"icdCode\", e.target.value || \"\")\n                          }\n                        />\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n              <Button variant=\"success\" onClick={addRow} className=\"mt-3\">\n                Add Row\n              </Button>\n            </Card.Body>\n          </Card>\n\n          <div className=\"text-center\">\n            <Button variant=\"primary\" onClick={saveChanges}>\n              Save All Changes\n            </Button>\n          </div>\n        </>\n      ) : (\n        <p>Loading patient data...</p>\n      )}\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}